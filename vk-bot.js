const { VK, Keyboard } = require('vk-io');
const db = require('./db');
const utils = require('./utils');
const fs = require('fs');
const path = require('path');
require('dotenv').config();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –í–ö –±–æ—Ç–∞
const vk = new VK({
  token: process.env.VK_TOKEN || '',
  pollingGroupId: process.env.VK_GROUP_ID || 0,
  apiTimeout: 10000, // 10 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤
  apiAttempts: 3     // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π
function getKeyboard() {
  return Keyboard.builder()
    .urlButton({
      label: '–°–æ—á–Ω—ã–π –ø—Ä–∏–≤–∞—Çüí¶',
      url: 'https://vk.com/donut/nekkttar'
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
function getAdminKeyboard() {
  return Keyboard.builder()
    .urlButton({
      label: '–°–æ—á–Ω—ã–π –ø—Ä–∏–≤–∞—Çüí¶',
      url: 'https://vk.com/donut/nekkttar'
    });
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (!process.env.VK_TOKEN || !process.env.VK_GROUP_ID) {
  console.error('–û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è VK_TOKEN –∏–ª–∏ VK_GROUP_ID');
  process.exit(1);
}

// –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞
const adminIds = process.env.ADMIN_VK_IDS ? 
  process.env.ADMIN_VK_IDS.split(',').map(id => Number(id.trim())) : 
  [];

// –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
console.log('==== DEBUG INFO ====');
console.log('VK_TOKEN:', process.env.VK_TOKEN ? 'Set (hidden)' : 'Not set');
console.log('VK_GROUP_ID:', process.env.VK_GROUP_ID);
console.log('ADMIN_VK_IDS:', process.env.ADMIN_VK_IDS);
console.log('FORCE_APPROVED_USERS:', process.env.FORCE_APPROVED_USERS);
console.log('===================');

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
function isAdmin(userId) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ userId —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω –≤ —á–∏—Å–ª–æ
  if (userId === undefined || userId === null || isNaN(Number(userId))) {
    return false;
  }
  return adminIds.includes(Number(userId));
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
async function sendWithKeyboard(context, message) {
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
  const keyboard = isAdmin(context.senderId) ? getAdminKeyboard() : getKeyboard();
  return await context.send(message, { keyboard });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
vk.updates.on('message_new', async (context) => {
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤ –∏ –∏—Å—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  if (context.isOutbox || context.senderType !== 'user') return;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º toLowerCase()
  const message = context.text ? context.text.toLowerCase().trim() : '';
  console.log(`–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${context.senderId}: ${message}`);
  
  // –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞/—Ñ–ª—É–¥–∞
  const userId = context.senderId;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞ —Å–ø–∞–º
  if (utils.antiSpam.isBlocked(userId)) {
    const timeLeft = Math.ceil(utils.antiSpam.getTimeToUnblock(userId) / 60000);
    await context.send(`‚õî –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ ${timeLeft} –º–∏–Ω.`);
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –Ω–∞ —Å–ø–∞–º
  if (message && utils.antiSpam.checkSpamContent(message)) {
    console.warn(`–û–±–Ω–∞—Ä—É–∂–µ–Ω —Å–ø–∞–º-–∫–æ–Ω—Ç–µ–Ω—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: ${message}`);
    await context.send('‚ùå –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç.');
    utils.antiSpam.addWarning(userId);
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–ª—É–¥ (—á–∞—Å—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è)
  if (utils.antiSpam.checkSpam(userId)) {
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ checkSpam
    const timeLeft = Math.ceil(utils.antiSpam.getTimeToUnblock(userId) / 60000);
    await context.send(`üõë –í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ. –í—Ä–µ–º–µ–Ω–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–∞ ${timeLeft} –º–∏–Ω.`);
    return;
  }
  
  // –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  if (message === '/test') {
    const isAdminUser = isAdmin(context.senderId);
    
    // –†–∞–∑–ª–∏—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const envInfo = `
    DEBUG INFO:
    VK_TOKEN: ${process.env.VK_TOKEN ? 'Set (–°–∫—Ä—ã—Ç–æ)' : 'Not set'}
    VK_GROUP_ID: ${process.env.VK_GROUP_ID || 'Not set'}
    ADMIN_VK_IDS: ${isAdminUser ? process.env.ADMIN_VK_IDS || 'Not set' : '[–°–∫—Ä—ã—Ç–æ]'} 
    FORCE_APPROVED_USERS: ${process.env.FORCE_APPROVED_USERS || 'Not set'}
    
    USER INFO:
    Your ID: ${context.senderId}
    Admin: ${isAdminUser ? 'Yes' : 'No'}
    FORCE_APPROVED: ${utils.checkForceApproved(context.senderId) ? 'Yes' : 'No'}
    `;
    
    await context.send(envInfo);
    return;
  }

  // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: –ø—Ä–æ—Å–º–æ—Ç—Ä –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  if (message === '/pending' && isAdmin(context.senderId)) {
    try {
      const pendingUsers = await db.getAllPendingUsers();
      
      if (pendingUsers.length === 0) {
        await context.send('–°–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—É—Å—Ç');
        return;
      }
      
      const pendingList = pendingUsers
        .map(user => {
          const date = new Date(user.last_attempt).toLocaleString('ru');
          return `ID: ${user.vk_id} | –°—Ç–∞—Ç—É—Å: ${user.status} | –ü–æ–ø—ã—Ç–æ–∫: ${user.attempts} | –î–∞—Ç–∞: ${date}`;
        })
        .join('\n');
      
      await context.send(`–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ–∂–∏–¥–∞—é—â–∏—Ö –ø—Ä–æ–≤–µ—Ä–∫–∏:\n${pendingList}`);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
      await context.send('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    }
    return;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ payload –æ—Ç –∫–Ω–æ–ø–æ–∫
  if (context.messagePayload) {
    const payload = context.messagePayload;
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏—Ö –∫–æ–º–∞–Ω–¥ –∏–∑ payload –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
  }

  // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: –æ–¥–æ–±—Ä–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (message.startsWith('/approve ') && isAdmin(context.senderId)) {
    try {
      const userId = Number(message.split(' ')[1]);
      if (isNaN(userId)) {
        await context.send('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        return;
      }
      
      await db.approvePendingUser(userId);
      await context.send(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${userId} –æ–¥–æ–±—Ä–µ–Ω`);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      await context.send('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
    return;
  }

    if (message === '–æ–ø–ª–∞—Ç–∏–ª' || message === '–æ–ø–ª–∞—Ç–∏–ª–∞') {
    console.log(`üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ '–æ–ø–ª–∞—Ç–∏–ª' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${context.senderId}`);
    
    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ VK Donut
      console.log(`üîç –≠—Ç–∞–ø 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ VK Donut –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${context.senderId}...`);
      const hasPayment = await utils.checkVkDonutPayment(context.senderId);
      console.log(`‚úÖ –≠—Ç–∞–ø 1 –∑–∞–≤–µ—Ä—à–µ–Ω: isDon –¥–ª—è ${context.senderId} => ${hasPayment}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      console.log(`üîç –≠—Ç–∞–ø 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...`);
      const isForceApproved = context.senderId === 493635171 || utils.checkForceApproved(context.senderId);
      console.log(`‚úÖ –≠—Ç–∞–ø 2 –∑–∞–≤–µ—Ä—à–µ–Ω: isForceApproved –¥–ª—è ${context.senderId} => ${isForceApproved}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ø–∏—Å–∫–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      console.log(`üîç –≠—Ç–∞–ø 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...`);
      const restoredUsers = await db.getRestoredDonors();
      const isUserInRestoredList = restoredUsers.some(user => user.vk_id === Number(context.senderId));
      console.log(`‚úÖ –≠—Ç–∞–ø 3 –∑–∞–≤–µ—Ä—à–µ–Ω: isUserInRestoredList –¥–ª—è ${context.senderId} => ${isUserInRestoredList}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–¥–æ–±—Ä–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ pending_users
      console.log(`üîç –≠—Ç–∞–ø 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ pending_users...`);
      const isPendingApproved = await db.isPendingApproved(context.senderId);
      console.log(`‚úÖ –≠—Ç–∞–ø 4 –∑–∞–≤–µ—Ä—à–µ–Ω: isPendingApproved –¥–ª—è ${context.senderId} => ${isPendingApproved}`);
      
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏–ª–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–¥–æ–±—Ä–µ–Ω
      if (hasPayment === true || isForceApproved || isUserInRestoredList || isPendingApproved === true) {
        console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${context.senderId} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —É–∂–µ –≤—ã–¥–∞–Ω –∫–ª—é—á
        console.log(`üîç –≠—Ç–∞–ø 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–ª—é—á–∞...`);
        const existingKey = await db.getUserKey(context.senderId);
        
        if (existingKey) {
          // –î–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–ª—é—á
          console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${context.senderId} —É–∂–µ –∏–º–µ–µ—Ç –∫–ª—é—á: ${existingKey}`);
          await context.send(
            `–£ –≤–∞—Å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ VK Donut!\n` +
            `–í–∞—à –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ üëâ \"${existingKey}\"\n` +
            `–ß—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø, –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤–æ –≤—Ç–æ—Ä–æ–º –ø—É–Ω–∫—Ç–µ –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, ` +
            `–∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å—Ç–µ–Ω–µ VK Donut —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.`,
            { keyboard: getKeyboard() }
          );
        } else {
          // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∫–ª—é—á –¥–ª—è –Ω–æ–≤—ã—Ö –∏–ª–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
          const accessKey = await utils.generateUniqueKey();
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
          await db.savePayment(context.senderId, accessKey);
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
          try {
            const userInfo = await utils.getUserInfo(context.senderId);
            if (userInfo) {
              await db.saveVkUser(userInfo);
              console.log(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ ${context.senderId} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –±–∞–∑—É`);
            }
          } catch (userInfoError) {
            console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ ${context.senderId}:`, userInfoError.message);
          }
          
          await context.send(
            `–û—Ç–ª–∏—á–Ω–æ, –í—ã –î–æ–Ω —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.\n` +
            `–í–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ üëâ \"${accessKey}\"\n` +
            `–ß—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø, –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤–æ –≤—Ç–æ—Ä–æ–º –ø—É–Ω–∫—Ç–µ –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, ` +
            `–∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å—Ç–µ–Ω–µ VK Donut —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.`,
            { keyboard: getKeyboard() }
          );
        }
      } else {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${context.senderId} –ù–ï –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`);
        
        if (hasPayment === undefined || hasPayment === null) {
          await context.send('–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 
            { keyboard: getKeyboard() });
          return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–Ω–µ–µ –∫–ª—é—á (–ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞)
        const oldKey = await db.getUserKey(context.senderId);
        if (oldKey) {
          await context.send(
            '–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ VK Donut –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ñ–æ—Ä–º–∏—Ç–µ –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É —á–µ—Ä–µ–∑ VK Donut.\n\n' +
            '–ü–æ—Å–ª–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.', 
            { keyboard: getKeyboard() }
          );
        } else {
          await context.send(
            '–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –æ—Ñ–æ—Ä–º–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É —á–µ—Ä–µ–∑ VK Donut.\n\n' +
            '–ï—Å–ª–∏ –≤—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ñ–æ—Ä–º–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n\n' +
            '–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.', 
            { keyboard: getKeyboard() }
          );
        }
        
        // –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${context.senderId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ VK Donut. –î–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö –ø—Ä–æ–≤–µ—Ä–∫–∏.`);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', context.senderId, ':', error);
      console.error('Stack trace:', error.stack);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:');
      console.error('- –¢–∏–ø –æ—à–∏–±–∫–∏:', error.constructor.name);
      console.error('- –°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
      console.error('- –ö–æ–¥ –æ—à–∏–±–∫–∏:', error.code);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –ª—É—á—à–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      let errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
      
      // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏
      if (error.message.includes('database') || error.message.includes('DB') || error.message.includes('sqlite')) {
        errorMessage = '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
      } else if (error.message.includes('VK API') || error.message.includes('network')) {
        errorMessage = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ VK. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
      } else if (error.message.includes('no such function') || error.message.includes('function')) {
        errorMessage = '–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω.';
      }
      
      await sendWithKeyboard(context, errorMessage);
    }
  }

  // –ü–æ–∫–∞–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–µ–Ω—é
  if (message === '/start' || message === '–Ω–∞—á–∞—Ç—å') {
    await context.send('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', {
      keyboard: getKeyboard()
    });
    return;
  }
  

});

// === –°–æ–±—ã—Ç–∏–µ Donut: —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ ===
// (—É–¥–∞–ª—ë–Ω –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é ‚Äî –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–æ–º–∞–Ω–¥—É "–û–ø–ª–∞—Ç–∏–ª")

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async function startVkBot() {
  try {
    console.log('–ó–∞–ø—É—Å–∫ VK –±–æ—Ç–∞...');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    await vk.updates.start();
    console.log('VK –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω');
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤ —Å–∏—Å—Ç–µ–º–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    try {
      if (utils && utils.monitoring && typeof utils.monitoring.updateServiceStatus === 'function') {
        utils.monitoring.updateServiceStatus('vkBot', true);
      }
    } catch (error) {
      console.log('–°—Ç–∞—Ç—É—Å VK –±–æ—Ç–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:', error.message);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ VK –±–æ—Ç–∞:', error);
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –≤ —Å–∏—Å—Ç–µ–º–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    try {
      if (utils && utils.monitoring && typeof utils.monitoring.updateServiceStatus === 'function') {
        utils.monitoring.updateServiceStatus('vkBot', false, error.message);
      }
    } catch (monitoringError) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ:', monitoringError);
    }
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –æ–±—ä–µ–∫—Ç—ã
module.exports = {
  vk,
  isAdmin,
  startVkBot
}; 