const { Telegraf, Markup } = require('telegraf');
const db = require('./db');
const fs = require('fs');
const path = require('path');
const utils = require('./utils');
require('dotenv').config();
const ExcelJS = require('exceljs');
const os = require('os');

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥ (1 –¥–µ–Ω—å, 2 –¥–Ω—è, 5 –¥–Ω–µ–π)
 * @param {number} days - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π
 * @returns {string} - –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
 */
function formatDaysString(days) {
  if (days === 0) {
    return "–º–µ–Ω–µ–µ 1 –¥–Ω";
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ü–∏—Ñ—Ä—É –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–≤–µ —Ü–∏—Ñ—Ä—ã
  const lastDigit = days % 10;
  const lastTwoDigits = days % 100;
  
  // –û—Å–æ–±—ã–µ —Å–ª—É—á–∞–∏ –¥–ª—è —á–∏—Å–µ–ª –æ—Ç 11 –¥–æ 19
  if (lastTwoDigits >= 11 && lastTwoDigits <= 19) {
    return `${days} –¥–Ω–µ–π`;
  }
  
  // –î–ª—è —á–∏—Å–µ–ª, –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—â–∏—Ö—Å—è –Ω–∞ 1 (–∫—Ä–æ–º–µ 11, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –≤—ã—à–µ)
  if (lastDigit === 1) {
    return `${days} –¥–µ–Ω—å`;
  }
  
  // –î–ª—è —á–∏—Å–µ–ª, –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—â–∏—Ö—Å—è –Ω–∞ 2, 3, 4 (–∫—Ä–æ–º–µ 12, 13, 14, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –≤—ã—à–µ)
  if (lastDigit >= 2 && lastDigit <= 4) {
    return `${days} –¥–Ω—è`;
  }
  
  // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
  return `${days} –¥–Ω–µ–π`;
}

// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∏ –Ω–æ–≤—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN || process.env.TG_BOT_TOKEN;
const GROUP_LINK = process.env.TELEGRAM_GROUP_LINK || process.env.TG_GROUP_LINK || 'https://t.me/your_group';

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (!BOT_TOKEN) {
  console.error('–û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN –∏–ª–∏ TG_BOT_TOKEN');
  // –ù–µ –≤—ã—Ö–æ–¥–∏–º –∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–∞, —á—Ç–æ–±—ã –æ—Å—Ç–∞–ª—å–Ω—ã–µ —á–∞—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –º–æ–≥–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å
  console.warn('Telegram –±–æ—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ');
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
const bot = new Telegraf(BOT_TOKEN || 'test_token');

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –∑–∞—â–∏—Ç—É –æ—Ç —Å–ø–∞–º–∞ –∫–∞–∫ middleware
// –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
bot.use(async (ctx, next) => {
  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏—è)
  if (!ctx.message) return next();
  
  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
  if (isAdmin(ctx.from.id)) return next();
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
  try {
    const isBlocked = await db.isUserBlocked(ctx.from.id);
    if (isBlocked) {
      console.log(`–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –ø—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ`);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É, —á—Ç–æ–±—ã –Ω–µ —Ñ–ª—É–¥–∏—Ç—å
      const now = Date.now();
      const lastNotificationKey = `last_block_notification_${ctx.from.id}`;
      const lastNotification = global[lastNotificationKey] || 0;
      
      if (now - lastNotification > 60000) { // —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É
        await ctx.reply(`‚õî –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –°–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –±—É–¥—É—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã.`);
        global[lastNotificationKey] = now;
      }
      
      // –ù–µ –≤—ã–∑—ã–≤–∞–µ–º next(), —á—Ç–æ–±—ã —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–æ—Å—å –¥–∞–ª—å—à–µ
      return;
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ –ë–î:', error);
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ antiSpam
  if (utils.antiSpam.isBlocked(ctx.from.id)) {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    const timeLeft = Math.ceil(utils.antiSpam.getTimeToUnblock(ctx.from.id) / 60000);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É, —á—Ç–æ–±—ã –Ω–µ —Ñ–ª—É–¥–∏—Ç—å
    const now = Date.now();
    const lastNotificationKey = `last_block_notification_${ctx.from.id}`;
    const lastNotification = global[lastNotificationKey] || 0;
    
    if (now - lastNotification > 60000) { // —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É
      await ctx.reply(`‚õî –í—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∑–∞ —Å–ø–∞–º. –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–Ω–∏–º–µ—Ç—Å—è —á–µ—Ä–µ–∑ ${timeLeft} –º–∏–Ω.`);
      global[lastNotificationKey] = now;
    }
    
    // –ù–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–∞–ª—å—à–µ
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ø–∞–º-–∫–æ–Ω—Ç–µ–Ω—Ç
  if (ctx.message.text && utils.antiSpam.checkSpamContent(ctx.message.text)) {
    console.warn(`–û–±–Ω–∞—Ä—É–∂–µ–Ω —Å–ø–∞–º-–∫–æ–Ω—Ç–µ–Ω—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.from.id}: ${ctx.message.text}`);
    await ctx.reply('‚ùå –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç.');
    utils.antiSpam.addWarning(ctx.from.id);
    return; // –ù–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–∞–ª—å—à–µ
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–ª—É–¥
  if (utils.antiSpam.checkSpam(ctx.from.id)) {
    const timeLeft = Math.ceil(utils.antiSpam.getTimeToUnblock(ctx.from.id) / 60000);
    await ctx.reply(`üõë –í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ. –í—Ä–µ–º–µ–Ω–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–∞ ${timeLeft} –º–∏–Ω.`);
    return; // –ù–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–∞–ª—å—à–µ
  }
  
  // –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–∞–ª—å—à–µ
  return next();
});

// –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
const adminKeyboard = Markup.keyboard([
  ['üë§ –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', 'üìä –°–ø–∏—Å–æ–∫ –¥–æ–Ω–æ–≤'],
  ['üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–º–æ–ø–∏–Ω–≥–∞', '‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥']
]).resize();

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–µ–Ω—é —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const adminMessagesKeyboard = Markup.keyboard([
  ['üì® –ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è', 'üìù –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è'],
  ['üîô –ù–∞–∑–∞–¥']
]).resize();

// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const restartInline = Markup.inlineKeyboard([
  Markup.button.callback('üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫', 'restart')
]);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–∞–Ω–∞–ª–µ
async function isUserInChannel(userId) {
  try {
    const chatId = process.env.TG_CHAT_ID;
    if (!chatId) {
      console.error('TG_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env');
      return false;
    }
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥—Ä—É–ø–ø—ã
      const chatMember = await bot.telegram.getChatMember(chatId, userId);
      console.log(`–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –≤ –∫–∞–Ω–∞–ª–µ ${chatId}: ${chatMember.status}`);
      return ['creator', 'administrator', 'member'].includes(chatMember.status);
    } catch (error) {
      // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–æ—á–Ω–æ –Ω–µ –≤ –≥—Ä—É–ø–ø–µ
      console.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –≤ –∫–∞–Ω–∞–ª–µ: ${error.message}`);
      return false;
    }
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª–µ: ${error}`);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è /start —Å —É—á—ë—Ç–æ–º —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function handleStart(ctx) {
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    await saveTelegramUserInfo(ctx.from);
    
    const alreadyRegistered = await db.isTgUserRegistered(ctx.from.id);
    const isAdminUser = isAdmin(ctx.from.id);
    const userInChannel = await isUserInChannel(ctx.from.id);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –µ—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω
    if (isAdminUser) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ —É –∞–¥–º–∏–Ω–∞
      const activeDialog = await db.getAdminActiveDialog(ctx.from.id);
      if (activeDialog) {
        const userName = activeDialog.username || 
                        (activeDialog.first_name && `${activeDialog.first_name} ${activeDialog.last_name || ''}`.trim()) || 
                        `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${activeDialog.user_id}`;
        
        await ctx.reply(`–£ –≤–∞—Å –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å ${userName}`, adminKeyboard);
      } else {
        await ctx.reply('–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', adminKeyboard);
      }
    }
    
    if (alreadyRegistered && userInChannel) {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–∞–Ω–∞–ª–µ
      await ctx.reply('–í—ã —É–∂–µ –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –∫–∞–Ω–∞–ª!');
    } else {
      // –î–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –≤ –∫–∞–Ω–∞–ª–µ (–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏) –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
      await ctx.reply(
        '–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Çüëã –±–æ—Ç –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –¢–ì —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ Nektar privatüîû.\n\n' +
        '–ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ, –≤–≤–µ–¥—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞üëá.'
      );
    }
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –≤ /start:', e);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.start(handleStart);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
bot.help(async (ctx) => {
  await ctx.reply(
    '–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ –∑–∞–∫—Ä—ã—Ç–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤ –í–ö –±–æ—Ç–µ. ' +
    '–ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 9 –∏–ª–∏ –±–æ–ª–µ–µ —Ü–∏—Ñ—Ä.',
    restartInline
  );
});



// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∞–º–æ–ø–∏–Ω–≥–∞
bot.command(['ping', 'ping_status'], async (ctx) => {
  try {
    console.log('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ ping –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', ctx.from.id);
    if (isAdmin(ctx.from.id)) {
      await ctx.reply('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã —Å–∞–º–æ–ø–∏–Ω–≥–∞...');
      
      // –ü–æ–ª—É—á–∞–µ–º –º–æ–¥—É–ª—å —Å–∞–º–æ–ø–∏–Ω–≥–∞
      const selfPing = require('./self-ping');
      const statusReport = await selfPing.getStatusReport();
      
      await ctx.reply(statusReport.text, { parse_mode: 'HTML' });
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–∏–Ω–≥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã
      const adminId = ctx.from.id;
      const testResult = await selfPing.testPingSystem(adminId);
      
      const statusText = `
<b>‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Å–∞–º–æ–ø–∏–Ω–≥–∞:</b>
ü§ñ VK –º–æ–¥—É–ª—å: ${testResult.vkModuleAvailable ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}
ü§ñ Telegram –º–æ–¥—É–ª—å: ${testResult.tgModuleAvailable ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}
‚è∞ –í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: ${new Date(testResult.timestamp).toLocaleString('ru-RU')}
`;
      
      await ctx.reply(statusText, { parse_mode: 'HTML' });
    } else {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /ping_status:', error);
    await ctx.reply(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: ${error.message}`);
  }
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ –∫–æ–¥—É
bot.command('check_user', async (ctx) => {
  try {
    console.log('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ check_user –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', ctx.from.id);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if (!isAdmin(ctx.from.id)) {
      await ctx.reply('‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    const args = ctx.message.text.split(' ');
    if (args.length < 2) {
      await ctx.reply(
        '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /check_user –ö–û–î_–î–û–°–¢–£–ü–ê\n\n' +
        '–ü—Ä–∏–º–µ—Ä: /check_user 062730647\n\n' +
        '–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ –µ–≥–æ –∫–æ–¥—É –¥–æ—Å—Ç—É–ø–∞.'
      );
      return;
    }
    
    const accessKey = args[1].trim();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const keyData = await db.checkAccessKey(accessKey);
    if (!keyData || !keyData.exists) {
      await ctx.reply(`‚ùå –ö–æ–¥ ${accessKey} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
      return;
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const vkInfo = await db.getVkUserInfo(keyData.vk_id).catch(() => null);
    const vkUserName = vkInfo ? `${vkInfo.first_name} ${vkInfo.last_name}` : `ID: ${keyData.vk_id}`;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫—ç—à–µ
    const cachedUsers = await db.getCachedUsers();
    const inCache = cachedUsers.find(d => d.vk_id === keyData.vk_id);
    
    let message = `‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:\n\n` +
                 `üë§ VK: ${vkUserName}\n` +
                 `üîë –ö–æ–¥: ${accessKey}\n` +
                 `üìÖ –î–∞—Ç–∞: ${keyData.payment_date || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n` +
                 `üîÑ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω: ${keyData.used ? '–î–∞' : '–ù–µ—Ç'}\n`;
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –∫—ç—à–µ, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–±–∞–≤–∏—Ç—å
    if (!inCache) {
      await ctx.reply(message, Markup.inlineKeyboard([
        Markup.button.callback('‚úÖ –î–∞, –¥–æ–±–∞–≤–∏—Ç—å', `add_user_${keyData.vk_id}_${accessKey}`)
      ]));
    } else {
      await ctx.reply(message);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /check_user:', error);
    await ctx.reply(`‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${error.message}`);
  }
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
bot.command(['report', 'status'], async (ctx) => {
  try {
    console.log('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ report –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', ctx.from.id);
    if (isAdmin(ctx.from.id)) {
      await ctx.reply('üîÑ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã...');
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
      const result = await sendDailyStatusReport(true);
      
      if (result) {
        await ctx.reply('‚úÖ –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º');
      } else {
        await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á–µ—Ç–∞');
      }
    } else {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /report:', error);
    await ctx.reply(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: ${error.message}`);
  }
});



// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
bot.hears('üë§ –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', async (ctx) => {
  try {
    if (isAdmin(ctx.from.id)) {
      await ctx.reply('–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', adminMessagesKeyboard);
    } else {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–µ–Ω—é —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã');
  }
});

bot.hears('üîô –ù–∞–∑–∞–¥', async (ctx) => {
  try {
    if (isAdmin(ctx.from.id)) {
      await ctx.reply('–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', adminKeyboard);
    } else {
      await handleStart(ctx);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∞–º–æ–ø–∏–Ω–≥–∞
bot.hears('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–º–æ–ø–∏–Ω–≥–∞', async (ctx) => {
  try {
    if (isAdmin(ctx.from.id)) {
      console.log('–ó–∞–ø—Ä–æ—à–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–º–æ–ø–∏–Ω–≥–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', ctx.from.id);
      const selfPing = require('./self-ping');
      const statusReport = await selfPing.getStatusReport();
      
      await ctx.reply(statusReport.text, { parse_mode: 'HTML' });
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–∏–Ω–≥
      await ctx.reply('üîÑ –ó–∞–ø—É—Å–∫–∞—é —Ç–µ—Å—Ç–æ–≤—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏...');
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º –ø–∏–Ω–≥, –Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª
      try {
        // –í–º–µ—Å—Ç–æ –≤—ã–∑–æ–≤–∞ –æ–±—ã—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø–∏–Ω–≥–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Ç–µ—Å—Ç–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
        // –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª
        const adminId = ctx.from.id;
        const testResult = await selfPing.testPingSystem(adminId);
        
        const statusText = `
<b>‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Å–∞–º–æ–ø–∏–Ω–≥–∞:</b>
ü§ñ VK –º–æ–¥—É–ª—å: ${testResult.vkModuleAvailable ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}
ü§ñ Telegram –º–æ–¥—É–ª—å: ${testResult.tgModuleAvailable ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}
‚è∞ –í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: ${new Date(testResult.timestamp).toLocaleString('ru-RU')}
`;
        
        await ctx.reply(statusText, { parse_mode: 'HTML' });
      } catch (pingError) {
        await ctx.reply(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∏—Å—Ç–µ–º—ã —Å–∞–º–æ–ø–∏–Ω–≥–∞: ${pingError.message}`);
      }
    } else {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∞–º–æ–ø–∏–Ω–≥–∞:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã');
  }
});

bot.hears('üì® –ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è', async (ctx) => {
  try {
    if (isAdmin(ctx.from.id)) {
      await showUnreadMessages(ctx);
    } else {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã');
  }
});

bot.hears('üìù –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è', async (ctx) => {
  try {
    if (isAdmin(ctx.from.id)) {
      await showAllMessages(ctx);
    } else {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã');
  }
});

bot.hears('‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥', async (ctx) => {
  try {
    if (isAdmin(ctx.from.id)) {
      await endDialog(ctx);
    } else {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–∞:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–ø–∏—Å–æ–∫ –¥–æ–Ω–æ–≤"
bot.hears('üìä –°–ø–∏—Å–æ–∫ –¥–æ–Ω–æ–≤', async (ctx) => {
  try {
    if (isAdmin(ctx.from.id)) {
      await ctx.reply('üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é Excel —Ñ–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º –¥–æ–Ω–æ—Ä–æ–≤...');
      
      // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ Excel —Ñ–∞–π–ª–∞
      await generateAndSendDonorsExcel(ctx);
    } else {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ–Ω–æ—Ä–æ–≤:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤ (–¥–ª—è inline –∫–Ω–æ–ø–æ–∫)
bot.action('restart', async (ctx) => {
  await ctx.answerCbQuery('–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫...');
  await handleStart(ctx);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å–æ —Å–ø–∏—Å–∫–æ–º —Å–æ–æ–±—â–µ–Ω–∏–π
bot.action(/^read_msg_(\d+)$/, async (ctx) => {
  try {
    if (!isAdmin(ctx.from.id)) {
      await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –¥–µ–π—Å—Ç–≤–∏—è');
      return;
    }
    
    const messageId = ctx.match[1];
    await db.markMessageAsRead(messageId);
    await ctx.answerCbQuery('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
    await showUnreadMessages(ctx);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ:', error);
    await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
  }
});

bot.action(/^dialog_user_(\d+)$/, async (ctx) => {
  try {
    if (!isAdmin(ctx.from.id)) {
      await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –¥–µ–π—Å—Ç–≤–∏—è');
      return;
    }
    
    const userId = parseInt(ctx.match[1]);
    await startDialog(ctx, userId);
    await ctx.answerCbQuery('–î–∏–∞–ª–æ–≥ –Ω–∞—á–∞—Ç');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:', error);
    await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
bot.action('end_dialog', async (ctx) => {
  try {
    if (!isAdmin(ctx.from.id)) {
      await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –¥–µ–π—Å—Ç–≤–∏—è');
      return;
    }
    
    await endDialog(ctx);
    await ctx.answerCbQuery('–î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–∞:', error);
    await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–∞');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.action(/^unread_page_(\d+)$/, async (ctx) => {
  try {
    if (!isAdmin(ctx.from.id)) {
      await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –¥–µ–π—Å—Ç–≤–∏—è');
      return;
    }
    
    const page = parseInt(ctx.match[1]);
    await ctx.answerCbQuery(`–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${page + 1}`);
    await showUnreadMessages(ctx, page);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
    await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.action(/^all_page_(\d+)$/, async (ctx) => {
  try {
    if (!isAdmin(ctx.from.id)) {
      await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –¥–µ–π—Å—Ç–≤–∏—è');
      return;
    }
    
    const page = parseInt(ctx.match[1]);
    await ctx.answerCbQuery(`–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${page + 1}`);
    await showAllMessages(ctx, page);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
    await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
  }
});

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userMessageLimits = {
  users: new Map(), // Map –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
  globalCounter: 0,  // –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
  lastResetTime: Date.now(), // –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–±—Ä–æ—Å–∞ —Å—á–µ—Ç—á–∏–∫–æ–≤
  MAX_MESSAGES_PER_USER: 10, // –ú–∞–∫—Å–∏–º—É–º —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–∏–Ω—É—Ç—É
  MAX_GLOBAL_MESSAGES: 50,  // –ú–∞–∫—Å–∏–º—É–º —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Å–µ–≥–æ –≤ –º–∏–Ω—É—Ç—É
  RESET_INTERVAL: 60000,    // –ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–±—Ä–æ—Å–∞ —Å—á–µ—Ç—á–∏–∫–æ–≤ (1 –º–∏–Ω—É—Ç–∞)
  FIRST_WARNING_THRESHOLD: 5, // –ü–æ—Ä–æ–≥ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
  COOL_DOWN_PERIOD: 120000   // –ü–µ—Ä–∏–æ–¥ "–æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è" –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (2 –º–∏–Ω—É—Ç—ã)
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
function checkMessageLimit(userId) {
  const now = Date.now();
  
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏, –µ—Å–ª–∏ –ø—Ä–æ—à–µ–ª –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å–±—Ä–æ—Å–∞
  if (now - userMessageLimits.lastResetTime > userMessageLimits.RESET_INTERVAL) {
    userMessageLimits.users.clear();
    userMessageLimits.globalCounter = 0;
    userMessageLimits.lastResetTime = now;
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  let userRecord = userMessageLimits.users.get(userId) || {
    count: 0,
    lastMessageTime: 0,
    warningSent: false,
    blockedUntil: 0
  };
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø–µ—Ä–∏–æ–¥–µ "–æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è"
  if (userRecord.blockedUntil > now) {
    return {
      allowed: false,
      reason: "cool_down",
      timeRemaining: Math.ceil((userRecord.blockedUntil - now) / 1000)
    };
  }
  
  // –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫–∏
  userRecord.count++;
  userMessageLimits.globalCounter++;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç
  if (userMessageLimits.globalCounter > userMessageLimits.MAX_GLOBAL_MESSAGES) {
    return {
      allowed: false,
      reason: "global_limit"
    };
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (userRecord.count > userMessageLimits.MAX_MESSAGES_PER_USER) {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥ "–æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è"
    userRecord.blockedUntil = now + userMessageLimits.COOL_DOWN_PERIOD;
    userMessageLimits.users.set(userId, userRecord);
    
    return {
      allowed: false,
      reason: "user_limit"
    };
  }
  
  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç—Å—è –∫ –ª–∏–º–∏—Ç—É, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
  const needsWarning = userRecord.count >= userMessageLimits.FIRST_WARNING_THRESHOLD && !userRecord.warningSent;
  if (needsWarning) {
    userRecord.warningSent = true;
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å
  userRecord.lastMessageTime = now;
  userMessageLimits.users.set(userId, userRecord);
  
  return {
    allowed: true,
    warning: needsWarning,
    count: userRecord.count,
    max: userMessageLimits.MAX_MESSAGES_PER_USER
  };
}

// –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', async (ctx, next) => {
  const message = ctx.message.text.trim();
  
  // –ï—Å–ª–∏ –≤ —Å–µ—Å—Å–∏–∏ –µ—Å—Ç—å –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –ø—Ä–∏—á–∏–Ω—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  if (ctx.session && ctx.session.awaitingBlockReason) {
    return next(); // –ü–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  }
  
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    await saveTelegramUserInfo(ctx.from);
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ª–∏–º–∏—Ç–æ–≤
    if (isAdmin(ctx.from.id)) {
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
      if (message.startsWith('/block ')) {
        const params = message.split(' ');
        if (params.length >= 2) {
          const userId = parseInt(params[1]);
          const reason = params.slice(2).join(' ') || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
          
          await blockUserCommand(ctx, userId, reason);
          return;
        }
      }
      
      if (message.startsWith('/unblock ')) {
        const params = message.split(' ');
        if (params.length >= 2) {
          const userId = parseInt(params[1]);
          
          await unblockUserCommand(ctx, userId);
          return;
        }
      }
      
      if (message === '/blocked') {
        await showBlockedUsers(ctx);
        return;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∞–¥–º–∏–Ω –≤ —Ä–µ–∂–∏–º–µ –¥–∏–∞–ª–æ–≥–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
      const activeDialog = await db.getAdminActiveDialog(ctx.from.id);
      if (activeDialog) {
        // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        try {
          const safeMessage = escapeHtml(message);
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
          await db.saveUserMessage({
            tg_id: activeDialog.user_id,
            message_text: message,
            message_id: ctx.message.message_id,
            message_type: 'text',
            from_admin: 1
          });
          
          await rateLimitedSendMessage(
            activeDialog.user_id,
            `<b>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</b>\n\n${safeMessage}`,
            { 
              parse_mode: 'HTML',
              disable_web_page_preview: true
            }
          ).then(() => {
            ctx.reply('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é');
          }).catch(async (error) => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', error);
            
            if (error.description && (
                error.description.includes('blocked') || 
                error.description.includes('chat not found') ||
                error.description.includes('user is deactivated')
            )) {
              await ctx.reply(
                `‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ${error.description}\n` +
                `–í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞ –∏–ª–∏ —É–¥–∞–ª–∏–ª —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç.`
              );
              
              // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥
              await ctx.reply(
                '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥ —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.',
                Markup.inlineKeyboard([
                  Markup.button.callback('‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥', `end_dialog`)
                ])
              );
            } else {
              await ctx.reply(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error.message}`);
            }
          });
        } catch (error) {
          console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
          await ctx.reply(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error.message}`);
        }
        return;
      }
    } else {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const limitCheck = checkMessageLimit(ctx.from.id);
      
      if (!limitCheck.allowed) {
        if (limitCheck.reason === "cool_down") {
          await ctx.reply(`‚ö†Ô∏è –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ ${limitCheck.timeRemaining} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.`);
          return;
        } else if (limitCheck.reason === "user_limit") {
          await ctx.reply("‚ö†Ô∏è –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏–º–∏—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.");
          return;
        } else if (limitCheck.reason === "global_limit") {
          await ctx.reply("‚ö†Ô∏è –°–∏—Å—Ç–µ–º–Ω—ã–π –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–µ–≤—ã—à–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
          return;
        }
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏ –∫ –ª–∏–º–∏—Ç—É
      if (limitCheck.warning) {
        await ctx.reply(`‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ ${limitCheck.count} —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ ${limitCheck.max} –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –≤ –º–∏–Ω—É—Ç—É.`);
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const isBlocked = await db.isUserBlocked(ctx.from.id);
    if (isBlocked && !isAdmin(ctx.from.id)) {
      // –¢–∏—Ö–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      return;
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try {
      await db.saveUserMessage({
        tg_id: ctx.from.id,
        message_text: message,
        message_id: ctx.message.message_id,
        message_type: 'text'
      });
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
      if (!isAdmin(ctx.from.id)) {
        notifyAdminsAboutNewMessage(ctx.from.id, message, 'text');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    }

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω ‚Äì –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–ª—è –Ω–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –∞–¥–º–∏–Ω–æ–º
    const registered = await db.isTgUserRegistered(ctx.from.id);
    
    if (registered && !isAdmin(ctx.from.id)) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ –∞–¥–º–∏–Ω–∞ —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
      const adminDialogs = await getAllAdminDialogsWithUser(ctx.from.id);
      
      if (adminDialogs.length > 0) {
        // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –≤ –¥–∏–∞–ª–æ–≥–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        for (const dialog of adminDialogs) {
          try {
            const userName = getUserDisplayName(ctx.from);
            const safeMessage = escapeHtml(message);
            await rateLimitedSendMessage(
              dialog.admin_id,
              `<b>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${userName}:</b>\n\n${safeMessage}`,
              { 
                parse_mode: 'HTML',
                disable_web_page_preview: true
              }
            ).catch(error => {
              console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${dialog.admin_id}:`, error);
            });
          } catch (dialogError) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${dialog.admin_id}:`, dialogError);
          }
        }
        return;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–∞–Ω–∞–ª–µ
      const userInChannel = await isUserInChannel(ctx.from.id);
      
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–∞–Ω–∞–ª–µ, –ø—Ä–æ–≤–µ—Ä—è–µ–º —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–¥–æ–º –¥–æ—Å—Ç—É–ø–∞
      if (!userInChannel) {
        if (/^\d{9,}$/.test(message)) {
          try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            const keyData = await db.checkAccessKeyWithUser(message, ctx.from.id);
            console.log(`–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ ${message} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.from.id}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç:`, 
                keyData ? `–ö–æ–¥ –Ω–∞–π–¥–µ–Ω (tg_id: ${keyData.tg_id}, vk_id: ${keyData.vk_id}, used: ${keyData.used})` : "–ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω");
            
            if (keyData) {
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–≤—è–∑–∞–Ω –ª–∏ –∫–æ–¥ —Å –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
              if (keyData.tg_id && keyData.tg_id !== ctx.from.id) {
                await ctx.reply(
                  '–≠—Ç–æ—Ç –∫–æ–¥ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.\n' +
                  '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –≤—ã–¥–∞–Ω –≤–∞–º –≤ VK –±–æ—Ç–µ.'
                );
                return;
              }

              // –ü–æ–º–µ—á–∞–µ–º –∫–ª—é—á –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π –∏ —Å–≤—è–∑—ã–≤–∞–µ–º —Å Telegram ID
              if (!keyData.tg_id) {
                await db.updateKeyUsed(message, ctx.from.id);
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ Telegram –≤ —Ç–∞–±–ª–∏—Ü—É tg_users
                await saveTelegramUserInfo(ctx.from);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à –¥–æ–Ω–æ–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ Telegram
                try {
                  const userInfo = await bot.telegram.getChat(ctx.from.id);
                  if (userInfo && keyData.vk_id) {
                    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫—ç—à–µ –¥–æ–Ω–æ–≤
                    await db.updateCachedDonorTgInfo(keyData.vk_id, ctx.from.id, getUserDisplayName(userInfo));
                  }
                } catch (error) {
                  console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ Telegram:', error);
                }
              }

              // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ø–∏—Å–∫–µ –æ–ø–ª–∞—Ç–∏–≤—à–∏—Ö
              await ctx.reply('–í—ã –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ –æ–ø–ª–∞—Ç–∏–≤—à–∏—Ö!');
              
              // –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
              await ctx.reply(`–ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø–æ —Å—Å—ã–ª–∫–µ ${GROUP_LINK}\n–ò –∂–¥–∏—Ç–µ –µ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!`);
              
              // –ï—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
              if (isAdmin(ctx.from.id)) {
                await ctx.reply('–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', adminKeyboard);
              }
                    } else {
          await ctx.reply(
            '–ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω.\n' + 
            '–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n' +
            '1. –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞\n' +
            '2. –í—ã —É–∂–µ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–∫—Ç–∏–≤–Ω—ã–º –¥–æ–Ω–∞—Ç–µ—Ä–æ–º VK\n\n' +
            '–†–µ—à–µ–Ω–∏–µ: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –≤ VK —Å–æ–æ–±—â–µ–Ω–∏–µ "–æ–ø–ª–∞—Ç–∏–ª" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–¥–∞.'
          );
          return;
        }
          } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–ª—é—á–∞:', error);
            await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            return;
          }
        } else {
          await ctx.reply(
            '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, –Ω–æ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–∞–Ω–∞–ª–µ.\n' +
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ–¥ –≤ VK –±–æ—Ç–µ.\n\n' +
            '–ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –Ω–µ –º–µ–Ω–µ–µ —á–µ–º –∏–∑ 9 —Ü–∏—Ñ—Ä.'
          );
          return;
        }
      }
      
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∏ –≤ –∫–∞–Ω–∞–ª–µ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ü–∏—Ñ—Ä–æ–≤—ã–º –∫–æ–¥–æ–º –¥–ª–∏–Ω–æ–π –æ—Ç 9 —Å–∏–º–≤–æ–ª–æ–≤
    if (/^\d{9,}$/.test(message)) {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        const keyData = await db.checkAccessKeyWithUser(message, ctx.from.id);
        console.log(`–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ ${message} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.from.id}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç:`, 
            keyData ? `–ö–æ–¥ –Ω–∞–π–¥–µ–Ω (tg_id: ${keyData.tg_id}, vk_id: ${keyData.vk_id}, used: ${keyData.used})` : "–ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω");
        
        if (keyData) {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–≤—è–∑–∞–Ω –ª–∏ –∫–æ–¥ —Å –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
          if (keyData.tg_id && keyData.tg_id !== ctx.from.id) {
            await ctx.reply(
              '–≠—Ç–æ—Ç –∫–æ–¥ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.\n' +
              '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –≤—ã–¥–∞–Ω –≤–∞–º –≤ VK –±–æ—Ç–µ.'
            );
            return;
          }

          // –ü–æ–º–µ—á–∞–µ–º –∫–ª—é—á –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π –∏ —Å–≤—è–∑—ã–≤–∞–µ–º —Å Telegram ID
          if (!keyData.tg_id) {
            await db.updateKeyUsed(message, ctx.from.id);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ Telegram –≤ —Ç–∞–±–ª–∏—Ü—É tg_users
            await saveTelegramUserInfo(ctx.from);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à –¥–æ–Ω–æ–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ Telegram
            try {
              const userInfo = await bot.telegram.getChat(ctx.from.id);
              if (userInfo && keyData.vk_id) {
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫—ç—à–µ –¥–æ–Ω–æ–≤
                await db.updateCachedDonorTgInfo(keyData.vk_id, ctx.from.id, getUserDisplayName(userInfo));
              }
            } catch (error) {
              console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ Telegram:', error);
            }
          }

          // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ø–∏—Å–∫–µ –æ–ø–ª–∞—Ç–∏–≤—à–∏—Ö
          await ctx.reply('–í—ã –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ –æ–ø–ª–∞—Ç–∏–≤—à–∏—Ö!');
          
          // –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
          await ctx.reply(`–ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø–æ —Å—Å—ã–ª–∫–µ ${GROUP_LINK}\n–ò –∂–¥–∏—Ç–µ –µ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!`);
          
          // –ï—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
          if (isAdmin(ctx.from.id)) {
            await ctx.reply('–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', adminKeyboard);
          }
        } else {
          await ctx.reply(
            '–ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω.\n' + 
            '–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n' +
            '1. –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞\n' +
            '2. –í—ã —É–∂–µ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–∫—Ç–∏–≤–Ω—ã–º –¥–æ–Ω–∞—Ç–µ—Ä–æ–º VK\n\n' +
            '–†–µ—à–µ–Ω–∏–µ: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –≤ VK —Å–æ–æ–±—â–µ–Ω–∏–µ "–æ–ø–ª–∞—Ç–∏–ª" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–¥–∞.'
          );
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–ª—é—á–∞:', error);
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      }
    } else {
      await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ (–Ω–µ –º–µ–Ω–µ–µ 9 —Ü–∏—Ñ—Ä).');
    }
  } catch (generalError) {
    console.error('–û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', generalError);
    try {
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.');
    } catch (replyError) {
      console.error('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', replyError);
    }
  }
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
bot.on('chat_join_request', async (ctx) => {
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    await saveTelegramUserInfo(ctx.from);
    
    const isRegistered = await db.isTgUserRegistered(ctx.from.id);

    if (isRegistered) {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—à—ë–ª –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é (–≤–≤—ë–ª –∫–æ–¥) ‚Äì –æ–¥–æ–±—Ä—è–µ–º
      await ctx.telegram.approveChatJoinRequest(ctx.chat.id, ctx.from.id);
      await notifyUserAdded(ctx.from.id);
    } else {
      // –ù–µ—Ç –∑–∞–ø–∏—Å–∏ –≤ –ë–î ‚Äì –æ—Ç–∫–ª–æ–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
      try {
        await ctx.telegram.declineChatJoinRequest(ctx.chat.id, ctx.from.id);
      } catch (e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª–æ–Ω–∏—Ç—å join_request:', e.message);
      }

      await bot.telegram.sendMessage(
        ctx.from.id,
        '–ß—Ç–æ–±—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ, —Å–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –≤ VK-–±–æ—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –∑–¥–µ—Å—å. ' +
        '–ü–æ—Å–ª–µ –≤–≤–æ–¥–∞ –∫–æ–¥–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞–∂–º–∏—Ç–µ ¬´–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É¬ª.'
      );
    }
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ chat_join_request:', e);
  }
});

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –≥—Ä—É–ø–ø—É
async function notifyUserAdded(tgId) {
  try {
    await bot.telegram.sendMessage(tgId, '–í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ!');
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${tgId}:`, error);
  }
}

// –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≥—Ä—É–ø–ø—ã
async function kickUserFromGroup(tgId, chatId) {
  try {
    // –°–Ω–∞—á–∞–ª–∞ —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ª–∏—á–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    await bot.telegram.sendMessage(tgId, '–ü–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å. –í—ã –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ –∫–∞–Ω–∞–ª–∞!');

    // –ò—Å–∫–ª—é—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (API ‚â•6.5) ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º banChatMember –≤–º–µ—Å—Ç–æ —É—Å—Ç–∞—Ä–µ–≤—à–µ–≥–æ kickChatMember
    await bot.telegram.banChatMember(chatId, tgId);

    // –°—Ä–∞–∑—É —Å–Ω–∏–º–∞–µ–º –±–∞–Ω, —á—Ç–æ–±—ã –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ–ø–ª–∞—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ —Å–Ω–æ–≤–∞ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É
    try {
      await bot.telegram.unbanChatMember(chatId, tgId, { only_if_banned: true });
    } catch (e) {
      console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–Ω—è—Ç—å –±–∞–Ω —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${tgId}:`, e.message);
    }

    return true;
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${tgId}:`, error);
    return false;
  }
}

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function notifyAdminToRemoveUser(users) {
  if (!users.length) return;

  try {
    const adminId = process.env.ADMIN_TG_ID;
    if (!adminId) return;

    const chunkSize = 40; // –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    for (let i = 0; i < users.length; i += chunkSize) {
      const chunk = users.slice(i, i + chunkSize);
      let message = '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–¥–∞–ª–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n';

      chunk.forEach(user => {
        message += `–£–¥–∞–ª–∏—Ç—å tg://user?id=${user.tg_id} (TG) | id${user.vk_id} (VK)\n`;
      });

      await bot.telegram.sendMessage(adminId, message);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ Telegram ID
function isAdmin(userId) {
  // –ü—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º true
  if (process.env.NODE_ENV === 'test') {
    return true;
  }
  
  const adminIds = process.env.ADMIN_TG_IDS ? 
    process.env.ADMIN_TG_IDS.split(',').map(id => Number(id.trim())) : 
    [];
  
  // –ï—Å–ª–∏ ADMIN_TG_ID —Ç–æ–∂–µ –∑–∞–¥–∞–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
  if (process.env.ADMIN_TG_ID && !adminIds.includes(Number(process.env.ADMIN_TG_ID))) {
    adminIds.push(Number(process.env.ADMIN_TG_ID));
  }
  
  console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∞ –¥–ª—è', userId, '–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤:', adminIds);
  return adminIds.includes(Number(userId));
}



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async function showUnreadMessages(ctx, page = 1) {
  try {
    const limit = 5; // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const offset = (page - 1) * limit;
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    const totalCount = await db.getUnreadMessagesCount();
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    const messages = await db.getUnreadMessagesWithPagination(offset, limit);
    
    if (messages.length === 0) {
      await ctx.reply('–ù–µ—Ç –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π üò¥');
      return;
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const totalPages = Math.ceil(totalCount / limit);
    await ctx.reply(`üì• <b>–ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è</b> (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${page} –∏–∑ ${totalPages || 1})`, {
      parse_mode: 'HTML'
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    for (const message of messages) {
      const formattedMsg = formatMessageForAdmin(message);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
      await ctx.reply(formattedMsg.text, {
        parse_mode: 'HTML',
        disable_web_page_preview: true,
        ...formattedMsg.markup
      });
      
      // –ï—Å–ª–∏ —ç—Ç–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –ø–æ—Å–ª–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
      if (message.file_id) {
        try {
          switch (message.message_type) {
            case 'photo':
              await ctx.replyWithPhoto(message.file_id);
              break;
            case 'video':
              await ctx.replyWithVideo(message.file_id);
              break;
            case 'document':
              await ctx.replyWithDocument(message.file_id);
              break;
            case 'voice':
              await ctx.replyWithVoice(message.file_id);
              break;
          }
        } catch (mediaError) {
          console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞: ${mediaError.message}`);
          await ctx.reply('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–µ–¥–∏–∞—Ñ–∞–π–ª. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–ª–∏ —Å—Ä–æ–∫ –µ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–µ–∫.');
        }
      }
    }
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–∞–Ω–∏—Ü, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    if (totalPages > 1) {
      const navButtons = [];
      
      if (page > 1) {
        navButtons.push(
          Markup.button.callback('‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è', `unread_page_${page-1}`)
        );
      }
      
      if (page < totalPages) {
        navButtons.push(
          Markup.button.callback('‚û°Ô∏è –°–ª–µ–¥—É—é—â–∞—è', `unread_page_${page+1}`)
        );
      }
      
      await ctx.reply('–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º:', Markup.inlineKeyboard([navButtons]));
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ—Ç–∏—Ç—å –≤—Å–µ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ"
    if (messages.length > 0) {
      await ctx.reply(
        '–î–µ–π—Å—Ç–≤–∏—è —Å –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏:',
        Markup.inlineKeyboard([
          Markup.button.callback('‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –≤—Å–µ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ', 'mark_all_read')
        ])
      );
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π üò¢');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async function showAllMessages(ctx, page = 1) {
  try {
    const limit = 5; // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const offset = (page - 1) * limit;
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
    const totalCount = await db.getAllMessagesCount();
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    const messages = await db.getAllMessagesWithPagination(offset, limit);
    
    if (messages.length === 0) {
      await ctx.reply('–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ü§∑‚Äç‚ôÇÔ∏è');
      return;
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const totalPages = Math.ceil(totalCount / limit);
    await ctx.reply(`üìã <b>–í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è</b> (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${page} –∏–∑ ${totalPages || 1})`, {
      parse_mode: 'HTML'
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    for (const message of messages) {
      const formattedMsg = formatMessageForAdmin(message);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
      await ctx.reply(formattedMsg.text, {
        parse_mode: 'HTML',
        disable_web_page_preview: true,
        ...formattedMsg.markup
      });
      
      // –ï—Å–ª–∏ —ç—Ç–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –ø–æ—Å–ª–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
      if (message.file_id) {
        try {
          switch (message.message_type) {
            case 'photo':
              await ctx.replyWithPhoto(message.file_id);
              break;
            case 'video':
              await ctx.replyWithVideo(message.file_id);
              break;
            case 'document':
              await ctx.replyWithDocument(message.file_id);
              break;
            case 'voice':
              await ctx.replyWithVoice(message.file_id);
              break;
          }
        } catch (mediaError) {
          console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞: ${mediaError.message}`);
          await ctx.reply('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–µ–¥–∏–∞—Ñ–∞–π–ª. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–ª–∏ —Å—Ä–æ–∫ –µ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–µ–∫.');
        }
      }
    }
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–∞–Ω–∏—Ü, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    if (totalPages > 1) {
      const navButtons = [];
      
      if (page > 1) {
        navButtons.push(
          Markup.button.callback('‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è', `all_page_${page-1}`)
        );
      }
      
      if (page < totalPages) {
        navButtons.push(
          Markup.button.callback('‚û°Ô∏è –°–ª–µ–¥—É—é—â–∞—è', `all_page_${page+1}`)
        );
      }
      
      await ctx.reply('–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º:', Markup.inlineKeyboard([navButtons]));
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π üò¢');
  }
}

// –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
async function startDialog(ctx, userId) {
  try {
    const adminId = ctx.from.id;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ Telegram
    try {
      const user = await bot.telegram.getChat(userId).catch(() => null);
      if (!user) {
        await ctx.reply(`–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID ${userId} –≤ Telegram.`);
        return;
      }
    } catch (userError) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, userError);
      await ctx.reply(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userError.message}`);
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ —É –∞–¥–º–∏–Ω–∞
    const activeDialog = await db.getAdminActiveDialog(adminId);
    if (activeDialog && activeDialog.user_id !== userId) {
      await ctx.reply(
        `–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.\n` +
        `–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ "‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥" –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã /end`
      );
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤–µ–¥–µ—Ç –ª–∏ –∫—Ç–æ-—Ç–æ —É–∂–µ –¥–∏–∞–ª–æ–≥ —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    const existingDialogs = await getAllAdminDialogsWithUser(userId);
    if (existingDialogs.length > 0) {
      // –ï—Å–ª–∏ –¥–∏–∞–ª–æ–≥ –≤–µ–¥–µ—Ç –¥—Ä—É–≥–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
      if (!existingDialogs.some(dialog => dialog.admin_id === adminId)) {
        const adminInfo = await getAdminInfo(existingDialogs[0].admin_id);
        const adminName = adminInfo ? adminInfo.first_name || `–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä #${adminInfo.id}` : `–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä #${existingDialogs[0].admin_id}`;
        
        await ctx.reply(
          `–° —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —É–∂–µ –≤–µ–¥–µ—Ç –¥–∏–∞–ª–æ–≥ ${adminName}.\n` +
          `–î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ –∏–ª–∏ –æ–±—Å—É–¥–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—á—É –¥–∏–∞–ª–æ–≥–∞ —Å –∫–æ–ª–ª–µ–≥–æ–π.`
        );
        return;
      }
    }
    
    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ –¥–∏–∞–ª–æ–≥–µ
    await db.createAdminDialog(adminId, userId);
    
    // –û—Ç–º–µ—á–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ
    await db.markAllUserMessagesAsRead(userId);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const messages = await db.getUserMessageHistory(userId, 10);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const user = await bot.telegram.getChat(userId).catch(() => null);
    const userName = user ? getUserDisplayName(user) : `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId}`;
    
    await ctx.reply(
      `–ù–∞—á–∞—Ç –¥–∏–∞–ª–æ–≥ —Å ${userName}.\n\n` +
      `–í—Å–µ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.\n` +
      `–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥" –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /end`,
      adminKeyboard
    );
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π, –ø–æ–∫–∞–∂–µ–º –µ—ë
    if (messages && messages.length > 0) {
      await ctx.reply(`–ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç ${userName}:`);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–æ—Ç —Å—Ç–∞—Ä—ã—Ö –∫ –Ω–æ–≤—ã–º)
      const recentMessages = messages.slice(0, 5).reverse();
      for (const msg of recentMessages) {
        // –ï—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
        if (msg.message_type === 'text' || !msg.file_id) {
          await ctx.reply(
            `<i>${new Date(msg.created_at).toLocaleString('ru-RU')}</i>\n\n${escapeHtml(msg.message_text)}`,
            { parse_mode: 'HTML' }
          );
        } else {
          // –î–ª—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
          await ctx.reply(
            `<i>${new Date(msg.created_at).toLocaleString('ru-RU')}</i>\n\n` +
            `${escapeHtml(msg.message_text)}\n\n` +
            `<i>–ú–µ–¥–∏–∞—Ñ–∞–π–ª —Ç–∏–ø–∞ "${msg.message_type}" (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω–∞)</i>`,
            { parse_mode: 'HTML' }
          );
        }
      }
    }
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    try {
      await bot.telegram.sendMessage(
        userId,
        'üë®‚Äçüíº <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –¥–∏–∞–ª–æ–≥—É.</b>\n\n' +
        '–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É—é —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. ' +
        '–í—Å–µ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã.',
        { parse_mode: 'HTML' }
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', error);
      await ctx.reply(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${error.message}`);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
  }
}

// –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
async function endDialog(ctx) {
  try {
    const adminId = ctx.from.id;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥
    const activeDialog = await db.getAdminActiveDialog(adminId);
    if (!activeDialog) {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤');
      return;
    }
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
    await db.closeAdminDialog(adminId, activeDialog.user_id);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const userName = activeDialog.username || 
                    (activeDialog.first_name && `${activeDialog.first_name} ${activeDialog.last_name || ''}`.trim()) || 
                    `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${activeDialog.user_id}`;
    
    await ctx.reply(`–î–∏–∞–ª–æ–≥ —Å ${userName} –∑–∞–≤–µ—Ä—à–µ–Ω`, adminKeyboard);
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–∞
    try {
      await bot.telegram.sendMessage(
        activeDialog.user_id,
        'üë®‚Äçüíº <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞–≤–µ—Ä—à–∏–ª –¥–∏–∞–ª–æ–≥.</b>\n\n' +
        '–ï—Å–ª–∏ —É –≤–∞—Å –ø–æ—è–≤—è—Ç—Å—è –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ–ª—É—á–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.',
        { parse_mode: 'HTML' }
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', error);
      await ctx.reply(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${error.message}`);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–∞:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–∞');
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤ –∞–¥–º–∏–Ω–æ–≤ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
async function getAllAdminDialogsWithUser(userId) {
  try {
    return await db.getAllAdminDialogsWithUser(userId);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, error);
    return [];
  }
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getUserDisplayName(user) {
  if (!user) return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
  
  if (user.username) {
    return `@${user.username}` + (user.first_name ? ` (${user.first_name} ${user.last_name || ''})`.trim() : '');
  }
  
  if (user.first_name || user.last_name) {
    return `${user.first_name || ''} ${user.last_name || ''}`.trim();
  }
  
  return `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.id}`;
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∑–∞–ø–∏—Å–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
function getUserDisplayNameFromMessage(message) {
  if (!message) return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
  
  if (message.username) {
    return `@${message.username}` + (message.first_name ? ` (${message.first_name} ${message.last_name || ''})`.trim() : '');
  }
  
  if (message.first_name || message.last_name) {
    return `${message.first_name || ''} ${message.last_name || ''}`.trim();
  }
  
  return `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${message.tg_id}`;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–µ
async function getAdminInfo(adminId) {
  try {
    return await bot.telegram.getChat(adminId);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–µ ${adminId}:`, error);
    return null;
  }
}

// –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ HTML-—Ç–µ–≥–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
function escapeHtml(text) {
  if (!text) return '';
  return text
    .replace(/&/g, '&amp;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&#039;');
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
 * @param {Object} message - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 * @param {boolean} showMarkReadButton - –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º"
 * @returns {Object} - –û–±—ä–µ–∫—Ç —Å –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏ —Ä–∞–∑–º–µ—Ç–∫–æ–π
 */
function formatMessageForAdmin(message, showMarkReadButton = true) {
  if (!message) {
    return {
      text: '<i>–û—à–∏–±–∫–∞: —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</i>',
      markup: {}
    };
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userName = message.username ? 
    `@${message.username}` + (message.first_name ? ` (${message.first_name} ${message.last_name || ''})`.trim() : '') :
    (message.first_name || message.last_name) ? 
      `${message.first_name || ''} ${message.last_name || ''}`.trim() : 
      `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${message.tg_id}`;
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
  const messageDate = new Date(message.created_at).toLocaleString('ru-RU');
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–æ–æ–±—â–µ–Ω–∏—è
  const statusEmoji = message.is_read ? '‚úÖ' : 'üÜï';
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏—è
  let header = `${statusEmoji} <b>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${escapeHtml(userName)}</b>\n`;
  header += `üÜî ID: ${message.tg_id}\n`;
  header += `‚è∞ –î–∞—Ç–∞: ${messageDate}\n`;
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
  let messageTypeText = '';
  switch(message.message_type) {
    case 'photo':
      messageTypeText = 'üì∑ –§–æ—Ç–æ';
      break;
    case 'video':
      messageTypeText = 'üé¨ –í–∏–¥–µ–æ';
      break;
    case 'document':
      messageTypeText = 'üìé –î–æ–∫—É–º–µ–Ω—Ç';
      break;
    case 'voice':
      messageTypeText = 'üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ';
      break;
    default:
      messageTypeText = 'üí¨ –¢–µ–∫—Å—Ç';
  }
  header += `üìù –¢–∏–ø: ${messageTypeText}\n\n`;
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
  const messageText = message.message_text ? escapeHtml(message.message_text) : '<i>–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞</i>';
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
  const buttons = [];
  
  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ª–æ–≥–∞
  buttons.push([
    Markup.button.callback('üó£ –û—Ç–≤–µ—Ç–∏—Ç—å', `dialog_user_${message.tg_id}`)
  ]);
  
  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
  buttons.push([
    Markup.button.callback('üìú –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π', `history_${message.tg_id}`)
  ]);
  
  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  buttons.push([
    Markup.button.callback('‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏', `check_block_status_${message.tg_id}`)
  ]);
  
  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–º–µ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
  if (showMarkReadButton && !message.is_read) {
    buttons.push([
      Markup.button.callback('‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º', `mark_read_${message.id}`)
    ]);
  }
  
  return {
    text: `${header}${messageText}`,
    markup: Markup.inlineKeyboard(buttons)
  };
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /end –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
bot.command('end', async (ctx) => {
  if (isAdmin(ctx.from.id)) {
    await endDialog(ctx);
  } else {
    await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
  }
});

// –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.command('messages', async (ctx) => {
  try {
    if (isAdmin(ctx.from.id)) {
      await showUnreadMessages(ctx);
    } else {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /messages:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã');
  }
});

// –§—É–Ω–∫—Ü–∏—è-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ (–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
async function handleMediaMessage(ctx, mediaType) {
  console.log(`–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞ —Ç–∏–ø–∞ ${mediaType} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${ctx.from.id}, –Ω–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ—Ç–∫–ª—é—á–µ–Ω`);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
  await saveTelegramUserInfo(ctx.from);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è
  await ctx.reply('‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.');
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
bot.on('photo', async (ctx) => {
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
  await saveTelegramUserInfo(ctx.from);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Ç–æ–º, —á—Ç–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è
  await ctx.reply('‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ
bot.on('video', async (ctx) => {
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
  await saveTelegramUserInfo(ctx.from);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Ç–æ–º, —á—Ç–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è
  await ctx.reply('‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (—Ñ–∞–π–ª–æ–≤)
bot.on('document', async (ctx) => {
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
  await saveTelegramUserInfo(ctx.from);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Ç–æ–º, —á—Ç–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è
  await ctx.reply('‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('voice', async (ctx) => {
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
  await saveTelegramUserInfo(ctx.from);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Ç–æ–º, —á—Ç–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è
  await ctx.reply('‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –≤—ã—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–∞–Ω–∞–ª–∞/–≥—Ä—É–ø–ø—ã
bot.on('chat_member', async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ –∏–º–µ–Ω–Ω–æ –æ –≤—ã—Ö–æ–¥–µ –∏–∑ –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞
    if (!ctx.chat || ctx.chat.id !== Number(process.env.TG_CHAT_ID)) {
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —É—á–∞—Å—Ç–Ω–∏–∫–∞
    const oldStatus = ctx.chatMember.old_chat_member?.status;
    const newStatus = ctx.chatMember.new_chat_member?.status;
    const userId = ctx.chatMember.new_chat_member?.user?.id || ctx.chatMember.from?.id;
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∏–Ω—É–ª –∫–∞–Ω–∞–ª (–±—ã–ª —É—á–∞—Å—Ç–Ω–∏–∫–æ–º, —Å—Ç–∞–ª –Ω–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–º)
    if (oldStatus && ['member', 'administrator', 'creator'].includes(oldStatus) && 
        newStatus && ['left', 'kicked'].includes(newStatus)) {
      
      console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –ø–æ–∫–∏–Ω—É–ª –∫–∞–Ω–∞–ª. –°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å: ${oldStatus}, –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: ${newStatus}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —ç—Ç–æ –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–ª–∏ –∫–∏–∫ –∑–∞ –Ω–µ–æ–ø–ª–∞—Ç—É
      if (newStatus === 'left') {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª —Å–∞–º
        console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ –ø–æ–∫–∏–Ω—É–ª –∫–∞–Ω–∞–ª`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ VK Donut
        const userKey = await db.getUserKeyByTgId(userId);
        if (userKey && userKey.vk_id) {
          const utils = require('./utils');
          const hasActiveSubscription = await utils.checkVkDonutPayment(userKey.vk_id);
          
          if (hasActiveSubscription) {
            // –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞, –Ω–æ –æ–Ω –≤—ã—à–µ–ª –∏–∑ –∫–∞–Ω–∞–ª–∞
            console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —Å –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π VK Donut –ø–æ–∫–∏–Ω—É–ª –∫–∞–Ω–∞–ª`);
            // –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
            // –ú–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ —É–≤–µ–¥–æ–º–∏—Ç—å –æ –≤—ã—Ö–æ–¥–µ –∏–∑ –∫–∞–Ω–∞–ª–∞
            try {
              await bot.telegram.sendMessage(userId, 
                '–í—ã –ø–æ–∫–∏–Ω—É–ª–∏ –∫–∞–Ω–∞–ª. –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ VK Donut –æ—Å—Ç–∞–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–æ–π. ' +
                '–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–Ω–∞–ª, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∞—à –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –≤ –±–æ—Ç–µ.'
              );
            } catch (error) {
              console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}:`, error);
            }
          }
        }
      } else if (newStatus === 'kicked') {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω (—Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –∑–∞ –Ω–µ–æ–ø–ª–∞—Ç—É)
        console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞`);
        // –°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏ kickUserFromGroup
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–±—ã—Ç–∏—è chat_member:', error);
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function notifyAdminsAboutNewMessage(userId, message, messageType) {
  console.log(`notifyAdminsAboutNewMessage –≤—ã–∑–≤–∞–Ω–∞: userId=${userId}, messageType=${messageType}`);
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const adminIds = process.env.ADMIN_TG_IDS ? 
      process.env.ADMIN_TG_IDS.split(',').map(id => Number(id.trim())) : 
      [];
    
    // –ï—Å–ª–∏ ADMIN_TG_ID —Ç–æ–∂–µ –∑–∞–¥–∞–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    if (process.env.ADMIN_TG_ID && !adminIds.includes(Number(process.env.ADMIN_TG_ID))) {
      adminIds.push(Number(process.env.ADMIN_TG_ID));
    }
    
    if (adminIds.length === 0) return;
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const user = await bot.telegram.getChat(userId).catch(() => null);
    const userName = user ? getUserDisplayName(user) : `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId}`;
    
    // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ª–æ–≥–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    const inlineKeyboard = Markup.inlineKeyboard([
      Markup.button.callback('üó£ –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', `dialog_user_${userId}`)
    ]);
    
    const safeMessage = escapeHtml(message);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º, —É –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    for (const adminId of adminIds) {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —É –∞–¥–º–∏–Ω–∞
        const activeDialog = await db.getAdminDialogBetween(adminId, userId).catch(() => null);
        
        if (!activeDialog) {
          await rateLimitedSendMessage(
            adminId,
            `üì© <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${userName}:</b>\n\n${safeMessage}`,
            { 
              parse_mode: 'HTML',
              disable_web_page_preview: true,
              ...inlineKeyboard
            }
          );
        }
      } catch (adminError) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É ${adminId}:`, adminError);
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∞–º –æ –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:', error);
  }
}

// –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ notifyAdminsAboutMedia (–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
async function notifyAdminsAboutMedia(userId, mediaType, caption) {
  console.log(`notifyAdminsAboutMedia –≤—ã–∑–≤–∞–Ω–∞: userId=${userId}, mediaType=${mediaType}, –Ω–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ—Ç–∫–ª—é—á–µ–Ω`);
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const adminIds = process.env.ADMIN_TG_IDS ? 
      process.env.ADMIN_TG_IDS.split(',').map(id => Number(id.trim())) : 
      [];
    
    // –ï—Å–ª–∏ ADMIN_TG_ID —Ç–æ–∂–µ –∑–∞–¥–∞–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    if (process.env.ADMIN_TG_ID && !adminIds.includes(Number(process.env.ADMIN_TG_ID))) {
      adminIds.push(Number(process.env.ADMIN_TG_ID));
    }
    
    if (adminIds.length === 0) return;
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const user = await bot.telegram.getChat(userId).catch(() => null);
    const userName = user ? getUserDisplayName(user) : `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId}`;
    
    // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ª–æ–≥–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    const inlineKeyboard = Markup.inlineKeyboard([
      Markup.button.callback('üó£ –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', `dialog_user_${userId}`)
    ]);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –º–µ–¥–∏–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
    let mediaTypeRus = mediaType;
    switch(mediaType) {
      case 'photo': mediaTypeRus = '—Ñ–æ—Ç–æ'; break;
      case 'video': mediaTypeRus = '–≤–∏–¥–µ–æ'; break;
      case 'document': mediaTypeRus = '–¥–æ–∫—É–º–µ–Ω—Ç'; break;
      case 'voice': mediaTypeRus = '–≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'; break;
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
    for (const adminId of adminIds) {
      try {
        await rateLimitedSendMessage(
          adminId,
          `üì© <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userName} –ø—ã—Ç–∞–ª—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å ${mediaTypeRus}</b>\n\n` +
          `<i>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ</i>`,
          { 
            parse_mode: 'HTML',
            ...inlineKeyboard
          }
        );
      } catch (adminError) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É ${adminId}:`, adminError);
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∞–º –æ –ø–æ–ø—ã—Ç–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞:', error);
  }
}

// –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ (–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
async function forwardMediaToAdmins(adminDialogs, user, mediaType) {
  const userName = getUserDisplayName(user);
  
  for (const dialog of adminDialogs) {
    try {
      console.log(`–ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞ —Ç–∏–ø–∞ ${mediaType} –æ—Ç ${userName} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${dialog.admin_id}, –Ω–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ—Ç–∫–ª—é—á–µ–Ω`);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      await rateLimitedSendMessage(
        dialog.admin_id,
        `üì© <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userName} –ø—ã—Ç–∞–ª—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–¥–∏–∞—Ñ–∞–π–ª (${mediaType})</b>\n\n` +
        `<i>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ</i>`,
        { parse_mode: 'HTML' }
      );
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${dialog.admin_id}:`, error);
    }
  }
}

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function blockUserCommand(ctx, userId, reason) {
  try {
    if (!userId || isNaN(userId)) {
      await ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
    const user = await bot.telegram.getChat(userId).catch(() => null);
    if (!user) {
      await ctx.reply(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Telegram`);
      return;
    }
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await db.blockUser(userId, ctx.from.id, reason);
    
    // –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏ —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    const activeDialogs = await getAllAdminDialogsWithUser(userId);
    for (const dialog of activeDialogs) {
      await db.closeAdminDialog(dialog.admin_id, userId);
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, —á—Ç–æ –¥–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω
      if (dialog.admin_id !== ctx.from.id) {
        try {
          await bot.telegram.sendMessage(
            dialog.admin_id,
            `‚ùå <b>–î–∏–∞–ª–æ–≥ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${getUserDisplayName(user)} –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω.</b>\n` +
            `–ü—Ä–∏—á–∏–Ω–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.`,
            { parse_mode: 'HTML' }
          );
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${dialog.admin_id}:`, error);
        }
      }
    }
    
    await ctx.reply(
      `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${getUserDisplayName(user)} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n` +
      `–ü—Ä–∏—á–∏–Ω–∞: ${reason}`
    );
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    await ctx.reply(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${error.message}`);
  }
}

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function unblockUserCommand(ctx, userId) {
  try {
    if (!userId || isNaN(userId)) {
      await ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
    const user = await bot.telegram.getChat(userId).catch(() => null);
    const userName = user ? getUserDisplayName(user) : `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId}`;
    
    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const result = await db.unblockUser(userId);
    
    if (result.changes > 0) {
      await ctx.reply(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userName} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.`);
    } else {
      await ctx.reply(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userName} –Ω–µ –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.`);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    await ctx.reply(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${error.message}`);
  }
}

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async function showBlockedUsers(ctx) {
  try {
    const blockedUsers = await db.getBlockedUsers();
    
    if (blockedUsers.length === 0) {
      await ctx.reply('–í —Å–∏—Å—Ç–µ–º–µ –Ω–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');
      return;
    }
    
    let message = '<b>üìã –°–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b>\n\n';
    
    for (let i = 0; i < blockedUsers.length; i++) {
      const user = blockedUsers[i];
      const userName = user.username ? `@${user.username}` : 
                      ((user.first_name || user.last_name) ? 
                        `${user.first_name || ''} ${user.last_name || ''}`.trim() : 
                        `ID: ${user.tg_id}`);
                        
      const adminName = user.admin_username ? `@${user.admin_username}` :
                       ((user.admin_first_name || user.admin_last_name) ?
                         `${user.admin_first_name || ''} ${user.admin_last_name || ''}`.trim() :
                         `ID: ${user.blocked_by}`);
      
      const reason = user.reason || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
      const date = new Date(user.created_at).toLocaleDateString('ru-RU');
      
      message += `${i+1}. <b>${userName}</b> (ID: ${user.tg_id})\n`;
      message += `   üìÖ –î–∞—Ç–∞: ${date}\n`;
      message += `   üëÆ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª: ${adminName}\n`;
      message += `   ‚ÑπÔ∏è –ü—Ä–∏—á–∏–Ω–∞: ${escapeHtml(reason)}\n\n`;
      
      // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–º, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –∏ –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤–æ–µ
      if (message.length > 3000 && i < blockedUsers.length - 1) {
        await ctx.reply(message, { parse_mode: 'HTML' });
        message = '<b>–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b>\n\n';
      }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
    message += '\n–î–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:\n/unblock ID_–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø';
    
    await ctx.reply(message, { parse_mode: 'HTML' });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
    await ctx.reply(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${error.message}`);
  }
}

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
bot.command('block', async (ctx) => {
  if (!isAdmin(ctx.from.id)) {
    await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
    return;
  }
  
  const args = ctx.message.text.split(' ').slice(1);
  if (args.length === 0) {
    await ctx.reply(
      '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /block ID_–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø [–ü–†–ò–ß–ò–ù–ê]\n\n' +
      '–ü—Ä–∏–º–µ—Ä: /block 123456789 –°–ø–∞–º –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö'
    );
    return;
  }
  
  const userId = parseInt(args[0]);
  const reason = args.slice(1).join(' ') || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
  
  await blockUserCommand(ctx, userId, reason);
});

bot.command('unblock', async (ctx) => {
  if (!isAdmin(ctx.from.id)) {
    await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
    return;
  }
  
  const args = ctx.message.text.split(' ').slice(1);
  if (args.length === 0) {
    await ctx.reply(
      '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /unblock ID_–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø\n\n' +
      '–ü—Ä–∏–º–µ—Ä: /unblock 123456789'
    );
    return;
  }
  
  const userId = parseInt(args[0]);
  await unblockUserCommand(ctx, userId);
});

bot.command('blocked', async (ctx) => {
  if (!isAdmin(ctx.from.id)) {
    await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
    return;
  }
  
  await showBlockedUsers(ctx);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.action(/^block_user_(\d+)$/, async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if (!isAdmin(ctx.from.id)) {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∫–Ω–æ–ø–∫–∏
    const userId = parseInt(ctx.match[1]);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ Telegram
    let user;
    try {
      user = await bot.telegram.getChat(userId);
    } catch (error) {
      await ctx.reply(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —Å ID ${userId}. –í–æ–∑–º–æ–∂–Ω–æ, –∞–∫–∫–∞—É–Ω—Ç —É–¥–∞–ª–µ–Ω.`);
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userName = getUserDisplayName(user);
    
    // –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –ø—Ä–∏—á–∏–Ω—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    await ctx.reply(
      `‚ö†Ô∏è –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userName} (ID: ${userId})?`,
      Markup.inlineKeyboard([
        [
          Markup.button.callback('‚úÖ –î–∞, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', `confirm_block_${userId}`),
          Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_block')
        ]
      ])
    );
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–∏—á–∏–Ω—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    if (!ctx.session) ctx.session = {};
    ctx.session.pendingBlockUser = userId;
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.action('cancel_block', async (ctx) => {
  try {
    // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–µ—Å—Å–∏–∏
    if (ctx.session) {
      delete ctx.session.pendingBlockUser;
    }
    
    // –°–æ–æ–±—â–∞–µ–º –æ–± –æ—Ç–º–µ–Ω–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    await ctx.reply('–û–ø–µ—Ä–∞—Ü–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–º–µ–Ω–µ–Ω–∞.');
    await ctx.answerCbQuery();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.action(/^confirm_block_(\d+)$/, async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if (!isAdmin(ctx.from.id)) {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∫–Ω–æ–ø–∫–∏
    const userId = parseInt(ctx.match[1]);
    
    // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∏—á–∏–Ω—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏–∑ –≥–æ—Ç–æ–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    await ctx.reply(
      '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:',
      Markup.inlineKeyboard([
        [Markup.button.callback('–°–ø–∞–º', `block_reason_${userId}_spam`)],
        [Markup.button.callback('–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è', `block_reason_${userId}_insult`)],
        [Markup.button.callback('–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ', `block_reason_${userId}_scam`)],
        [Markup.button.callback('–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª', `block_reason_${userId}_rules`)],
        [Markup.button.callback('–î—Ä—É–≥–æ–µ', `block_reason_${userId}_other`)],
        [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_block')]
      ])
    );
    
    await ctx.answerCbQuery('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–∏—á–∏–Ω—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
bot.action(/^block_reason_(\d+)_(.+)$/, async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if (!isAdmin(ctx.from.id)) {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–∏—á–∏–Ω—É –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∫–Ω–æ–ø–∫–∏
    const userId = parseInt(ctx.match[1]);
    const reasonCode = ctx.match[2];
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–¥ –ø—Ä–∏—á–∏–Ω—ã –≤ —á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç
    let reason;
    switch (reasonCode) {
      case 'spam':
        reason = '–°–ø–∞–º';
        break;
      case 'insult':
        reason = '–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è';
        break;
      case 'scam':
        reason = '–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ';
        break;
      case 'rules':
        reason = '–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª';
        break;
      case 'other':
        reason = '–î—Ä—É–≥–∞—è –ø—Ä–∏—á–∏–Ω–∞';
        break;
      default:
        reason = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
    }
    
    console.log(`–ë–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}, –ø—Ä–∏—á–∏–Ω–∞: ${reason}`);
    
    try {
      // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const blockResult = await db.blockUser(userId, ctx.from.id, reason);
      console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:', blockResult);
      
      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
      let userName = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId}`;
      try {
        const user = await bot.telegram.getChat(userId);
        userName = getUserDisplayName(user);
      } catch (error) {
        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º ID
        console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ ${userId}:`, error);
      }
      
      // –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
      const activeDialogs = await getAllAdminDialogsWithUser(userId);
      console.log(`–ù–∞–π–¥–µ–Ω–æ ${activeDialogs.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${userId}`);
      
      for (const dialog of activeDialogs) {
        await db.closeAdminDialog(dialog.admin_id, userId);
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
        if (dialog.admin_id !== ctx.from.id) {
          try {
            await bot.telegram.sendMessage(
              dialog.admin_id,
              `‚ùå <b>–î–∏–∞–ª–æ–≥ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${userName} –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω.</b>\n` +
              `–ü—Ä–∏—á–∏–Ω–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º ${getUserDisplayName(ctx.from)}.\n` +
              `–ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: ${escapeHtml(reason)}`,
              { parse_mode: 'HTML' }
            );
          } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${dialog.admin_id}:`, error);
          }
        }
      }
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ —É—Å–ø–µ—à–Ω–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
      await ctx.reply(
        `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userName} —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n` +
        `–ü—Ä–∏—á–∏–Ω–∞: ${escapeHtml(reason)}`
      );
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      await ctx.reply(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${error.message}`);
    }
    
    await ctx.answerCbQuery();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–∏—á–∏–Ω—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  }
});

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü —Å–æ–æ–±—â–µ–Ω–∏–π
bot.action(/^unread_page_(\d+)$/, async (ctx) => {
  const page = parseInt(ctx.match[1]);
  await showUnreadMessages(ctx, page);
  await ctx.answerCbQuery();
});

bot.action(/^all_page_(\d+)$/, async (ctx) => {
  const page = parseInt(ctx.match[1]);
  await showAllMessages(ctx, page);
  await ctx.answerCbQuery();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–º–µ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ
bot.action(/^mark_read_(\d+)$/, async (ctx) => {
  try {
    const messageId = ctx.match[1];
    await db.markMessageAsRead(messageId);
    await ctx.answerCbQuery('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, —É–¥–∞–ª—è—è –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º"
    try {
      const messageObj = await db.getUserMessageById(messageId);
      if (messageObj) {
        const formattedMsg = formatMessageForAdmin(
          { ...messageObj, is_read: 1 }, // –ö–ª–æ–Ω–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –∏ –º–µ–Ω—è–µ–º —Ñ–ª–∞–≥
          false // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø—Ä–æ—á–∏—Ç–∞—Ç—å
        );
        
        await ctx.editMessageText(formattedMsg.text, {
          parse_mode: 'HTML',
          disable_web_page_preview: true,
          ...formattedMsg.markup
        });
      }
    } catch (editError) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', editError);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º:', error);
    await ctx.answerCbQuery('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–æ–±—â–µ–Ω–∏—è');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ—Ç–∏—Ç—å –≤—Å–µ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ"
bot.action('mark_all_read', async (ctx) => {
  try {
    // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    const messages = await db.getUnreadMessagesWithPagination(0, 100); // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö
    
    if (messages && messages.length > 0) {
      // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const userIds = [...new Set(messages.map(msg => msg.tg_id))];
      
      // –ü–æ–º–µ—á–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ
      for (const userId of userIds) {
        await db.markAllUserMessagesAsRead(userId);
      }
      
      await ctx.answerCbQuery('–í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–º–µ—á–µ–Ω—ã –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ');
      await ctx.reply('‚úÖ –í—Å–µ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–º–µ—á–µ–Ω—ã –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
      await showUnreadMessages(ctx);
    } else {
      await ctx.answerCbQuery('–ù–µ—Ç –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π');
      await ctx.reply('‚ÑπÔ∏è –ù–µ—Ç –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –º–∞—Å—Å–æ–≤–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
    await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.action(/^history_(\d+)$/, async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –Ω–∞–∂–∞–≤—à–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if (!isAdmin(ctx.from.id)) {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–∫–∏
    const userId = parseInt(ctx.match[1]);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    const adminIds = process.env.ADMIN_TG_IDS ? 
      process.env.ADMIN_TG_IDS.split(',').map(id => Number(id.trim())) : 
      [];
      
    // –ï—Å–ª–∏ —Ç–∞–∫–∂–µ –∑–∞–¥–∞–Ω ADMIN_TG_ID, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫
    if (process.env.ADMIN_TG_ID && !adminIds.includes(Number(process.env.ADMIN_TG_ID))) {
      adminIds.push(Number(process.env.ADMIN_TG_ID));
    }
    
    // –ï—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –∏—Å—Ç–æ—Ä–∏—è –∞–¥–º–∏–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    if (adminIds.includes(userId)) {
      await ctx.reply('‚ö†Ô∏è –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
      await ctx.answerCbQuery('–û–ø–µ—Ä–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const userInfo = await bot.telegram.getChat(userId).catch(() => null);
    const userName = userInfo ? getUserDisplayName(userInfo) : `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId}`;
    
    // –°–æ–æ–±—â–∞–µ–º –æ –Ω–∞—á–∞–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
    await ctx.reply(`–ó–∞–≥—Ä—É–∂–∞—é –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userName}...`);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const history = await db.getUserMessageHistory(userId);
    
    if (!history || history.length === 0) {
      await ctx.reply(`–ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userName} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
      return;
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    await ctx.reply(`üìú <b>–ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userName}</b> (${history.length} —Å–æ–æ–±—â–µ–Ω–∏–π):`, {
      parse_mode: 'HTML'
    });
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å–æ–æ–±—â–µ–Ω–∏–π (–∏–ª–∏ –º–µ–Ω—å—à–µ, –µ—Å–ª–∏ –∏—Ö –º–µ–Ω—å—à–µ)
    const messagesToShow = history.slice(Math.max(0, history.length - 20));
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≥—Ä—É–ø–ø–∞–º–∏ –ø–æ 5
    const groupSize = 5;
    for (let i = 0; i < messagesToShow.length; i += groupSize) {
      const batch = messagesToShow.slice(i, i + groupSize);
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      for (const message of batch) {
        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –∏ —Ç–µ–∫—Å—Ç
        const messageDate = new Date(message.created_at).toLocaleString('ru');
        const safeText = escapeHtml(message.message_text);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        let messageTypeEmoji = '';
        switch(message.message_type) {
          case 'photo':
            messageTypeEmoji = 'üì∑ ';
            break;
          case 'video':
            messageTypeEmoji = 'üé¨ ';
            break;
          case 'document':
            messageTypeEmoji = 'üìé ';
            break;
          case 'voice':
            messageTypeEmoji = 'üé§ ';
            break;
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        await ctx.reply(
          `${messageTypeEmoji}<i>[${messageDate}]</i>\n\n${safeText}`,
          { parse_mode: 'HTML' }
        );
        
        // –ï—Å–ª–∏ —ç—Ç–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
        if (message.file_id) {
          try {
            switch(message.message_type) {
              case 'photo':
                await ctx.replyWithPhoto(message.file_id);
                break;
              case 'video':
                await ctx.replyWithVideo(message.file_id);
                break;
              case 'document':
                await ctx.replyWithDocument(message.file_id);
                break;
              case 'voice':
                await ctx.replyWithVoice(message.file_id);
                break;
            }
          } catch (mediaError) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏: ${mediaError.message}`);
            await ctx.reply('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–µ–¥–∏–∞—Ñ–∞–π–ª. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–ª–∏ —Å—Ä–æ–∫ –µ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–µ–∫.');
          }
        }
      }
      
      // –ï—Å–ª–∏ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω—è—è –≥—Ä—É–ø–ø–∞, –∂–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–π
      if (i + groupSize < messagesToShow.length) {
        await delay(300);
      }
    }
    
    // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±—ã–ª–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ –º–µ–Ω—å—à–µ, —á–µ–º –≤—Å–µ–≥–æ –≤ –∏—Å—Ç–æ—Ä–∏–∏
    if (messagesToShow.length < history.length) {
      await ctx.reply(
        `–ü–æ–∫–∞–∑–∞–Ω—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ ${messagesToShow.length} —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ ${history.length}. ` +
        `–ë–æ–ª–µ–µ —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã.`
      );
    }
    
    await ctx.answerCbQuery();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π');
    await ctx.answerCbQuery('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.action(/^check_block_status_(\d+)$/, async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if (!isAdmin(ctx.from.id)) {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∫–Ω–æ–ø–∫–∏
    const userId = parseInt(ctx.match[1]);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    let userName = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId}`;
    try {
      const user = await bot.telegram.getChat(userId);
      userName = getUserDisplayName(user);
    } catch (error) {
      console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ ${userId}:`, error);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    const isBlocked = await db.isUserBlocked(userId);
    console.log(`–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–ª—è ${userName} (${userId}): ${isBlocked ? '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' : '–Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}`);
    
    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    let buttons;
    if (isBlocked) {
      buttons = [
        [Markup.button.callback('üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', `unblock_user_${userId}`)],
        [Markup.button.callback('üó£ –û—Ç–≤–µ—Ç–∏—Ç—å', `dialog_user_${userId}`)],
        [Markup.button.callback('üìú –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π', `history_${userId}`)]
      ];
      
      await ctx.reply(
        `‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userName} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`,
        Markup.inlineKeyboard(buttons)
      );
    } else {
      buttons = [
        [Markup.button.callback('üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', `block_user_${userId}`)],
        [Markup.button.callback('üó£ –û—Ç–≤–µ—Ç–∏—Ç—å', `dialog_user_${userId}`)],
        [Markup.button.callback('üìú –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π', `history_${userId}`)]
      ];
      
      await ctx.reply(
        `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userName} –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`,
        Markup.inlineKeyboard(buttons)
      );
    }
    
    await ctx.answerCbQuery();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    await ctx.answerCbQuery('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.action(/^unblock_user_(\d+)$/, async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if (!isAdmin(ctx.from.id)) {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∫–Ω–æ–ø–∫–∏
    const userId = parseInt(ctx.match[1]);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    let userName = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId}`;
    try {
      const user = await bot.telegram.getChat(userId);
      userName = getUserDisplayName(user);
    } catch (error) {
      console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ ${userId}:`, error);
    }
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    await ctx.reply(
      `–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userName}?`,
      Markup.inlineKeyboard([
        [
          Markup.button.callback('‚úÖ –î–∞, —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', `confirm_unblock_${userId}`),
          Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_unblock')
        ]
      ])
    );
    
    await ctx.answerCbQuery();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
bot.action('cancel_unblock', async (ctx) => {
  await ctx.reply('–û–ø–µ—Ä–∞—Ü–∏—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞.');
  await ctx.answerCbQuery();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
bot.action(/^confirm_unblock_(\d+)$/, async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if (!isAdmin(ctx.from.id)) {
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∫–Ω–æ–ø–∫–∏
    const userId = parseInt(ctx.match[1]);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    let userName = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId}`;
    try {
      const user = await bot.telegram.getChat(userId);
      userName = getUserDisplayName(user);
    } catch (error) {
      console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ ${userId}:`, error);
    }
    
    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log(`–†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
    const result = await db.unblockUser(userId);
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:', result);
    
    if (result.changes > 0) {
      await ctx.reply(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userName} —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.`);
    } else {
      await ctx.reply(`‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userName} –Ω–µ –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.`);
    }
    
    await ctx.answerCbQuery();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  }
});

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ Telegram –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
 * @param {Object} user - –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
 * @returns {Promise<boolean>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏
 */
async function saveTelegramUserInfo(user) {
  if (!user || !user.id) return false;
  
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é saveTelegramUser –∏–∑ –º–æ–¥—É–ª—è db –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ –≤—ã–∑–æ–≤–∞ db.run
    await db.saveTelegramUser(user);
    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram:', error);
    return false;
  }
}

/**
 * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
 * @param {Date|Number|String} firstDateOrDays - –î–∞—Ç–∞ –ø–µ—Ä–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å –¥–∞—Ç–æ–π
 * @returns {string} - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
 */
function calculateDuration(firstDateOrDays) {
  // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–æ —á–∏—Å–ª–æ, —ç—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏
  if (typeof firstDateOrDays === 'number') {
    const days = firstDateOrDays;
    return formatDaysString(days);
  }
  
  // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–µ –≤ –¥–∞—Ç—É
  let firstDate;
  if (typeof firstDateOrDays === 'string') {
    firstDate = new Date(firstDateOrDays);
  } else {
    // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ –¥–∞—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–µ
    firstDate = firstDateOrDays instanceof Date ? firstDateOrDays : new Date();
  }
  
  const now = new Date();
  const diffTime = Math.abs(now - firstDate);
  const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24)); // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–Ω—ã—Ö –¥–Ω–µ–π
  
  return formatDaysString(diffDays);
}

/**
 * –§—É–Ω–∫—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ (–¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏)
 * @param {number} ms - –í—Ä–µ–º—è –∑–∞–¥–µ—Ä–∂–∫–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
 * @returns {Promise} - –ü—Ä–æ–º–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
 */
function delay(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —É—á–µ—Ç–æ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π Telegram API
const messageQueue = [];
let isProcessingQueue = false;
const MAX_MESSAGES_PER_SECOND = 20; // –ú–∞–∫—Å. —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ–∫—É–Ω–¥—É (–ª–∏–º–∏—Ç Telegram ~30/—Å–µ–∫)
const MIN_DELAY_MS = 100; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ (–º—Å)
let lastMessageTime = 0;
let messageCountInLastSecond = 0;
let lastSecondTimestamp = 0;

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Å–∫–æ—Ä–æ—Å—Ç–∏ Telegram API
 * @param {number} chatId - ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
 * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {Object} options - –û–ø—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
 * @returns {Promise} - –ü—Ä–æ–º–∏—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
function rateLimitedSendMessage(chatId, text, options = {}) {
  return new Promise((resolve, reject) => {
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥—å
    messageQueue.push({
      chatId,
      text,
      options,
      resolve,
      reject,
      type: 'text',
      priority: options.priority || 0 // –í—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è —Å—Ä–æ—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    });
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –æ—á–µ—Ä–µ–¥—å –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É (–≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤–ø–µ—Ä–µ–¥)
    messageQueue.sort((a, b) => b.priority - a.priority);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—á–µ—Ä–µ–¥–∏, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞
    if (!isProcessingQueue) {
      processMessageQueue();
    }
  });
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —É—á–µ—Ç–æ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
 */
async function processMessageQueue() {
  if (isProcessingQueue) return;
  
  isProcessingQueue = true;
  
  while (messageQueue.length > 0) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ–∫—É–Ω–¥—É
    const now = Date.now();
    
    // –ï—Å–ª–∏ –ø—Ä–æ—à–ª–∞ 1 —Å–µ–∫—É–Ω–¥–∞ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
    if (now - lastSecondTimestamp >= 1000) {
      lastSecondTimestamp = now;
      messageCountInLastSecond = 0;
    }
    
    // –ï—Å–ª–∏ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ–∫—É–Ω–¥—É, –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
    if (messageCountInLastSecond >= MAX_MESSAGES_PER_SECOND) {
      const waitTime = 1000 - (now - lastSecondTimestamp); // –ñ–¥–µ–º –¥–æ –∫–æ–Ω—Ü–∞ —Ç–µ–∫—É—â–µ–π —Å–µ–∫—É–Ω–¥—ã
      if (waitTime > 0) {
        await delay(waitTime);
      }
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
      lastSecondTimestamp = Date.now();
      messageCountInLastSecond = 0;
    }
    
    // –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
    const timeSinceLastMessage = now - lastMessageTime;
    if (timeSinceLastMessage < MIN_DELAY_MS) {
      await delay(MIN_DELAY_MS - timeSinceLastMessage);
    }
    
    const message = messageQueue.shift();
    
    try {
      let result;
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
      switch (message.type) {
        case 'text':
          result = await bot.telegram.sendMessage(
            message.chatId,
            message.text,
            message.options
          );
          break;
        case 'photo':
          result = await bot.telegram.sendPhoto(
            message.chatId,
            message.fileId,
            message.options
          );
          break;
        case 'video':
          result = await bot.telegram.sendVideo(
            message.chatId,
            message.fileId,
            message.options
          );
          break;
        case 'document':
          result = await bot.telegram.sendDocument(
            message.chatId,
            message.fileId,
            message.options
          );
          break;
        case 'voice':
          result = await bot.telegram.sendVoice(
            message.chatId,
            message.fileId,
            message.options
          );
          break;
        default:
          throw new Error(`–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –º–µ–¥–∏–∞: ${message.type}`);
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
      lastMessageTime = Date.now();
      messageCountInLastSecond++;
      
      message.resolve(result);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –æ—á–µ—Ä–µ–¥–∏:', error);
      
      // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ–º –ª–∏–º–∏—Ç–∞, –ø–æ–≤—Ç–æ—Ä–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥—å
      if (error.code === 429 || 
          (error.description && error.description.includes('Too Many Requests'))) {
        console.log('–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ Telegram API, –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É...');
        
        // –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏–∑ –æ—Ç–≤–µ—Ç–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        let retryAfter = 1000;
        if (error.parameters && error.parameters.retry_after) {
          retryAfter = error.parameters.retry_after * 1000;
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å —Å –≤—ã—Å–æ–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
        messageQueue.unshift({
          ...message,
          priority: 10 // –í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
        });
        
        // –ñ–¥–µ–º —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º
        await delay(retryAfter);
      } else {
        message.reject(error);
      }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ñ–ª—É–¥–∞
    if (messageQueue.length > 0) {
      await delay(MIN_DELAY_MS);
    }
  }
  
  isProcessingQueue = false;
}

// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
async function restoreActiveDialogs() {
  try {
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const activeDialogs = await getAllActiveDialogs();
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${activeDialogs.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è`);
    
    // –ï—Å–ª–∏ –¥–∏–∞–ª–æ–≥–æ–≤ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º —Å–∫–æ—Ä–æ—Å—Ç–∏
    if (activeDialogs.length > 5) {
      console.log(`–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∏–∞–ª–æ–≥–æ–≤ (${activeDialogs.length}), –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏`);
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ API
    for (let i = 0; i < activeDialogs.length; i++) {
      const dialog = activeDialogs[i];
      
      try {
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–µ
        const adminInfo = await getAdminInfo(dialog.admin_id);
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        const userInfo = await bot.telegram.getChat(dialog.user_id).catch(() => null);
        const userName = userInfo ? getUserDisplayName(userInfo) : `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${dialog.user_id}`;
        
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–∞
        if (adminInfo) {
          await rateLimitedSendMessage(
            dialog.admin_id,
            `‚úÖ <b>–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å ${userName}</b>\n\n` +
            '–ë–æ—Ç –±—ã–ª –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω, –Ω–æ –≤–∞—à –¥–∏–∞–ª–æ–≥ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω. ' +
            '–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥.',
            {
              parse_mode: 'HTML',
              ...adminKeyboard
            }
          );
        }
      } catch (dialogError) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–∞ admin_id=${dialog.admin_id}, user_id=${dialog.user_id}:`, dialogError);
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤ Telegram API
      if (i < activeDialogs.length - 1) {
        await delay(100); // 100 –º—Å –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤:', error);
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤
async function getAllActiveDialogs() {
  try {
    return await new Promise((resolve, reject) => {
      db.all(
        `SELECT ad.*, tu.username, tu.first_name, tu.last_name
         FROM admin_dialogs ad
         LEFT JOIN tg_users tu ON ad.user_id = tu.user_id
         WHERE ad.is_active = 1`,
        (err, rows) => {
          if (err) {
            reject(err);
          } else {
            resolve(rows || []);
          }
        }
      );
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤:', error);
    return [];
  }
}

// –î–ª—è –æ—Ç—á–µ—Ç–∞ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã
let lastStatusReportTime = 0;

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –æ —Å—Ç–∞—Ç—É—Å–µ —Å–∏—Å—Ç–µ–º—ã
async function sendDailyStatusReport() {
  try {
    console.log('–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –æ —Å—Ç–∞—Ç—É—Å–µ —Å–∏—Å—Ç–µ–º—ã...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const donorsCount = await db.countAllUsers().catch(() => '–Ω/–¥');
    const tgUsersCount = await db.countTelegramUsers().catch(() => '–Ω/–¥');
    const messagesCount = await db.getAllMessagesCount().catch(() => '–Ω/–¥');
    const unreadCount = await db.getUnreadMessagesCount().catch(() => '–Ω/–¥');
    const blockedUsers = await db.getBlockedUsers().catch(() => []);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ—Ç—á–µ—Ç–∞
    const reportText = `
üìä *–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã*

üë§ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${donorsCount}
üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Telegram: ${tgUsersCount}
üí¨ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${messagesCount}
üì© –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: ${unreadCount}
üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${blockedUsers.length}

üïí –û—Ç—á–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω: ${new Date().toLocaleString('ru-RU')}
    `.trim();
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    const adminIds = getAdminIds();
    for (const adminId of adminIds) {
      try {
        await bot.telegram.sendMessage(adminId, reportText, { parse_mode: 'Markdown' });
        console.log(`–û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${adminId}`);
      } catch (err) {
        console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${adminId}:`, err);
      }
    }
    
    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞:', error);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞
function checkAndSendDailyReport() {
  try {
    const now = new Date();
    const hour = now.getHours();
    const minute = now.getMinutes();
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 10:00
    if (hour === 10 && minute >= 0 && minute <= 5) {
      sendDailyStatusReport();
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞:', error);
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ index.js
module.exports.sendDailyStatusReport = sendDailyStatusReport;

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
  async function startTgBot() {
    try {
      console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram-–±–æ—Ç–∞...');
      console.log('–¢–æ–∫–µ–Ω –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç:', !!process.env.TELEGRAM_BOT_TOKEN);

      // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
      setInterval(checkAndSendDailyReport, 60000);
      
      await bot.launch();
      console.log('Bot.launch() –≤—ã–ø–æ–ª–Ω–µ–Ω, –±–æ—Ç –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∞—Ç—å –∞–ø–¥–µ–π—Ç—ã');

      // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ –º–µ–Ω—é Telegram
      await bot.telegram.setMyCommands([
        { command: 'start', description: '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞' },
        { command: 'help', description: '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é' },
        { command: 'messages', description: '–ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–ª—è –∞–¥–º–∏–Ω–æ–≤)' },
        { command: 'end', description: '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥ (–¥–ª—è –∞–¥–º–∏–Ω–æ–≤)' },
        { command: 'ping', description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∞–º–æ–ø–∏–Ω–≥–∞ (–¥–ª—è –∞–¥–º–∏–Ω–æ–≤)' },
        { command: 'report', description: '–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ (–¥–ª—è –∞–¥–º–∏–Ω–æ–≤)' }
      ]);
      
      // –í–∫–ª—é—á–∞–µ–º ¬´–∫–Ω–æ–ø–∫—É –º–µ–Ω—é¬ª Telegram —Å–ª–µ–≤–∞ –æ—Ç —Å–∫—Ä–µ–ø–∫–∏ (Bot API 6.7+)
      try {
        await bot.telegram.setChatMenuButton(undefined, { type: 'commands' });
      } catch (e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å chat menu button:', e.message);
      }
      
      // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
      try {
        await restoreActiveDialogs();
      } catch (restoreError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤:', restoreError);
      }

      console.log('Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω');
      
      // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤ —Å–∏—Å—Ç–µ–º–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
      try {
        const utils = require('./utils');
        if (utils && utils.monitoring && typeof utils.monitoring.updateServiceStatus === 'function') {
          utils.monitoring.updateServiceStatus('telegramBot', true);
        }
      } catch (error) {
        console.log('–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:', error.message);
      }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Telegram –±–æ—Ç–∞:', error);
    // –í—ã–≤–æ–¥–∏–º –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.stack);
  }
}


module.exports = { 
  bot,
  startTgBot,
  kickUserFromGroup,
  notifyAdminToRemoveUser,
  showUnreadMessages,
  showAllMessages,
  startDialog,
  endDialog,
  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
  escapeHtml,
  getUserDisplayName,
  getUserDisplayNameFromMessage,
  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
  restoreActiveDialogs,
  getAllActiveDialogs,
  // –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–µ–¥–∏–∞ (–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
  notifyAdminsAboutMedia,
  forwardMediaToAdmins,
  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π
  blockUserCommand,
  unblockUserCommand,
  showBlockedUsers,

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–æ–≤
  sendDailyStatusReport,
  notifyAdminsAboutNewMessage,
  notifyAdminsAboutMedia,
  checkAndSendDailyReport
}; 

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ–Ω–æ—Ä–∞ –≤ –∫—ç—à
bot.action(/^add_donor_(\d+)_(.+)$/, async (ctx) => {
  try {
    const adminId = ctx.from.id;
    if (!isAdmin(adminId)) {
      await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
      return;
    }
    
    const [, vkId, accessKey] = ctx.match;
    const vkIdNum = Number(vkId);
    
    await ctx.answerCbQuery('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...');
    await ctx.reply(`‚è≥ –î–æ–±–∞–≤–ª—è—é –¥–æ–Ω–æ—Ä–∞ —Å VK ID ${vkIdNum} –≤ —Å–ø–∏—Å–æ–∫...`);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ VK
    let vkUserName = null;
    try {
      const vkUser = await require('./utils').getUserInfo(vkIdNum);
      if (vkUser && vkUser.first_name) {
        vkUserName = `${vkUser.first_name} ${vkUser.last_name || ''}`.trim();
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ VK
        await db.saveVkUser(vkUser);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ VK –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', error);
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–¥–µ
    const keyData = await db.checkAccessKey(accessKey);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫—ç—à –¥–æ–Ω–æ–≤
    await db.saveDonorsList([{
      vk_id: vkIdNum,
      vk_name: vkUserName || `ID: ${vkIdNum}`,
      tg_id: keyData?.tg_id || null,
      payment_date: keyData?.payment_date || new Date().toISOString(),
      subscription_days: 30,
      total_amount: 99
    }]);
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å Telegram ID, –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    if (keyData?.tg_id) {
      try {
        const tgUser = await bot.telegram.getChat(keyData.tg_id);
        await saveTelegramUserInfo(tgUser);
        
        const tgName = getUserDisplayName(tgUser);
        await db.updateCachedDonorTgInfo(vkIdNum, keyData.tg_id, tgName);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ Telegram:', error);
      }
    }
    
    await ctx.reply(
      `‚úÖ –î–æ–Ω–æ—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫!\n\n` +
      `üë§ VK: ${vkUserName || `ID: ${vkIdNum}`}\n` +
      `üîë –ö–æ–¥: ${accessKey}`
    );
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–æ–Ω–æ—Ä–∞:', error);
    await ctx.reply(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–æ–Ω–æ—Ä–∞: ${error.message}`);
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫—ç—à
bot.action(/^add_user_(\d+)_(.+)$/, async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if (!isAdmin(ctx.from.id)) {
      await ctx.reply('‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º VK ID –∏ –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –∏–∑ callback_data
    const vkIdNum = parseInt(ctx.match[1]);
    const accessKey = ctx.match[2];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const keyData = await db.checkAccessKey(accessKey);
    if (!keyData || !keyData.exists) {
      await ctx.reply(`‚ùå –ö–æ–¥ ${accessKey} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
      return;
    }
    
    await ctx.reply(`‚è≥ –î–æ–±–∞–≤–ª—è—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å VK ID ${vkIdNum} –≤ —Å–ø–∏—Å–æ–∫...`);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ VK
    const vkInfo = await db.getVkUserInfo(vkIdNum).catch(() => null);
    const vkUserName = vkInfo ? `${vkInfo.first_name} ${vkInfo.last_name}` : `ID: ${vkIdNum}`;
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ Telegram, –µ—Å–ª–∏ –∫–æ–¥ –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω
    let tgName = null;
    if (keyData.used && keyData.tg_id) {
      const tgInfo = await db.getTelegramUserInfo(keyData.tg_id).catch(() => null);
      tgName = tgInfo ? getUserDisplayName(tgInfo) : `ID: ${keyData.tg_id}`;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫—ç—à
    await db.saveUsersList([{
      vk_id: vkIdNum,
      vk_name: vkUserName,
      tg_id: keyData.tg_id || null,
      tg_name: tgName,
      payment_date: keyData.payment_date || new Date().toISOString().split('T')[0],
      subscription_days: 30, // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 30 –¥–Ω–µ–π
      total_amount: 99 // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 99 —Ä—É–±.
    }]);
    
    // –ï—Å–ª–∏ –∫–æ–¥ –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    if (keyData.used && keyData.tg_id) {
      await db.updateCachedUserTgInfo(vkIdNum, keyData.tg_id, tgName);
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
    await ctx.reply(
      `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫!\n\n` +
      `üë§ VK: ${vkUserName}\n` +
      `üîë –ö–æ–¥: ${accessKey}`
    );
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    await ctx.reply(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${error.message}`);
  }
});

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ Excel —Ñ–∞–π–ª–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –¥–æ–Ω–æ—Ä–æ–≤
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 */
async function generateAndSendDonorsExcel(ctx) {
  try {
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
    const tempDir = os.tmpdir();
    const filePath = path.join(tempDir, `donors_list_${Date.now()}.xlsx`);
    
    // –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á—É—é –∫–Ω–∏–≥—É Excel
    const workbook = new ExcelJS.Workbook();
    workbook.creator = 'Nektar Bot';
    workbook.lastModifiedBy = 'Telegram Bot';
    workbook.created = new Date();
    workbook.modified = new Date();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ª–∏—Å—Ç —Å –¥–æ–Ω–æ—Ä–∞–º–∏
    const worksheet = workbook.addWorksheet('–°–ø–∏—Å–æ–∫ –¥–æ–Ω–æ–≤');
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    worksheet.columns = [
      { header: 'No', key: 'no', width: 5 },
      { header: '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –í–ö', key: 'vk_name', width: 25 },
      { header: 'ID –í–ö–æ–Ω—Ç–∞–∫—Ç–µ', key: 'vk_id', width: 15 },
      { header: '–°—Å—ã–ª–∫–∞ –í–ö', key: 'vk_link', width: 30 },
      { header: 'ID Telegram', key: 'tg_id', width: 15 },
      { header: '–ò–º—è –≤ Telegram', key: 'tg_name', width: 25 },
      { header: '–î–∞—Ç–∞ –ø–µ—Ä–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–∏', key: 'payment_date', width: 17 },
      { header: '–ü–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏', key: 'subscription_days', width: 15 },
      { header: '–°—É–º–º–∞ –¥–æ–Ω–∞—Ç–æ–≤', key: 'amount', width: 15 },
      { header: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á', key: 'access_key', width: 20 }
    ];
    
    // –°—Ç–∏–ª–∏–∑—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    worksheet.getRow(1).font = { bold: true };
    worksheet.getRow(1).alignment = { vertical: 'middle', horizontal: 'center' };
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –¥–æ–Ω–æ—Ä–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    let donorsList = await db.getAllCachedDonors();
    
    // –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã access_keys
    if (!donorsList || donorsList.length === 0) {
      const accessKeys = await db.getAllAccessKeys();
      
      if (accessKeys && accessKeys.length > 0) {
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª—é—á–∏ –≤ —Ñ–æ—Ä–º–∞—Ç —Å–ø–∏—Å–∫–∞ –¥–æ–Ω–æ—Ä–æ–≤
        donorsList = accessKeys.map(key => {
          return {
            vk_id: key.vk_id || null,
            vk_name: key.vk_name || null,
            tg_id: key.tg_id || null,
            tg_name: null, // –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ–∑–∂–µ, –µ—Å–ª–∏ –µ—Å—Ç—å tg_id
            payment_date: key.payment_date || null,
            subscription_days: key.subscription_days || 30,
            total_amount: key.amount || 99,
            access_key: key.access_key
          };
        });
        
        // –î–æ–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
        for (const donor of donorsList) {
          // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ VK –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –µ—Å–ª–∏ –µ—Å—Ç—å ID
          if (donor.vk_id && !donor.vk_name) {
            try {
              const vkInfo = await db.getVkUserInfo(donor.vk_id);
              if (vkInfo) {
                donor.vk_name = `${vkInfo.first_name} ${vkInfo.last_name || ''}`.trim();
              }
            } catch (e) {
              console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ VK –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ ${donor.vk_id}:`, e);
            }
          }
          
          // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –µ—Å–ª–∏ –µ—Å—Ç—å ID
          if (donor.tg_id && !donor.tg_name) {
            try {
              const tgInfo = await db.getTelegramUserInfo(donor.tg_id);
              if (tgInfo) {
                donor.tg_name = getUserDisplayName(tgInfo);
              }
            } catch (e) {
              console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ ${donor.tg_id}:`, e);
            }
          }
        }
      }
    }
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ–Ω–æ—Ä–æ–≤, —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
    if (!donorsList || donorsList.length === 0) {
      await ctx.reply('‚ö†Ô∏è –°–ø–∏—Å–æ–∫ –¥–æ–Ω–æ–≤ –ø—É—Å—Ç. –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞.');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–ª—é—á–∏ –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –±–∞–∑—ã
    const accessKeys = await db.getAllAccessKeys();
    const keysMap = {};
    
    // –°–æ–∑–¥–∞–µ–º –º–∞–ø—É –∫–ª—é—á–µ–π –ø–æ VK ID
    if (accessKeys && accessKeys.length > 0) {
      accessKeys.forEach(key => {
        if (key.vk_id) {
          if (!keysMap[key.vk_id]) {
            keysMap[key.vk_id] = [];
          }
          keysMap[key.vk_id].push(key.access_key);
        }
      });
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–≥–æ –¥–æ–Ω–æ—Ä–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ –≤ Excel
    let rowNumber = 1;
    for (const donor of donorsList) {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø–∏—Å–∏ –±–µ–∑ VK ID
      if (!donor.vk_id) continue;
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ VK –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –µ—Å–ª–∏ –∏–º—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
      if (!donor.vk_name || donor.vk_name === '' || donor.vk_name === `ID: ${donor.vk_id}`) {
        try {
          console.log(`–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ VK —Å ID ${donor.vk_id} –¥–ª—è Excel`);
          const vkInfo = await db.getVkUserInfo(donor.vk_id);
          if (vkInfo && (vkInfo.first_name || vkInfo.last_name)) {
            donor.vk_name = `${vkInfo.first_name || ''} ${vkInfo.last_name || ''}`.trim();
            console.log(`–ü–æ–ª—É—á–µ–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è VK: ${donor.vk_name}`);
          } else {
            // –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ—Ç –≤ –±–∞–∑–µ, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users
            const userInfo = await db.getUserById(donor.vk_id);
            if (userInfo && userInfo.vk_name) {
              donor.vk_name = userInfo.vk_name;
              console.log(`–ü–æ–ª—É—á–µ–Ω–æ –∏–º—è –∏–∑ users: ${donor.vk_name}`);
            }
          }
        } catch (e) {
          console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ VK –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ ${donor.vk_id}:`, e);
        }
      }
      
      // –ï—Å–ª–∏ –∏–º—è –≤—Å—ë –µ—â—ë –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É —Å ID
      if (!donor.vk_name || donor.vk_name === '') {
        donor.vk_name = `ID: ${donor.vk_id}`;
      }
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞
      let accessKey = donor.access_key;
      
      // –ï—Å–ª–∏ —É –¥–æ–Ω–æ—Ä–∞ –Ω–µ—Ç –∫–ª—é—á–∞, –Ω–æ –µ—Å—Ç—å –≤ –º–∞–ø–µ, –±–µ—Ä–µ–º –æ—Ç—Ç—É–¥–∞
      if (!accessKey && keysMap[donor.vk_id] && keysMap[donor.vk_id].length > 0) {
        accessKey = keysMap[donor.vk_id][0];
      }
      
      // –ï—Å–ª–∏ –∫–ª—é—á–∞ –≤—Å—ë –µ—â–µ –Ω–µ—Ç, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–∞–≥–ª—É—à–∫—É
      if (!accessKey) {
        accessKey = '–Ω–µ –∑–∞–¥–∞–Ω';
      }
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –ø–æ–¥–ø–∏—Å–∫–∏
      const paymentDate = donor.payment_date ? 
        new Date(donor.payment_date).toLocaleDateString('ru-RU') : 
        '';
      
      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π, –ø—Ä–æ—à–µ–¥—à–∏—Ö —Å –º–æ–º–µ–Ω—Ç–∞ –ø–µ—Ä–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
      let subscriptionDays = 0;
      if (donor.payment_date) {
        const firstPaymentDate = new Date(donor.payment_date);
        const currentDate = new Date();
        const diffTime = currentDate - firstPaymentDate;
        subscriptionDays = Math.floor(diffTime / (1000 * 60 * 60 * 24)); // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–Ω—ã—Ö –¥–Ω–µ–π
      }
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Å–∫–ª–æ–Ω–µ–Ω–∏–µ–º
      const formattedSubscriptionDays = formatDaysString(subscriptionDays);
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ Excel
      worksheet.addRow({
        no: rowNumber++,
        vk_name: donor.vk_name || '',
        vk_id: donor.vk_id || '',
        vk_link: donor.vk_id ? `https://vk.com/id${donor.vk_id}` : '',
        tg_id: donor.tg_id || '',
        tg_name: donor.tg_name || '',
        payment_date: paymentDate,
        subscription_days: formattedSubscriptionDays,
        amount: donor.amount ? `${donor.amount} —Ä—É–±.` : '99 —Ä—É–±.',
        access_key: accessKey
      });
    }
    
    // –ó–∞–¥–∞–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
    for (let i = 1; i <= worksheet.rowCount; i++) {
      const row = worksheet.getRow(i);
      
      // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
      row.getCell('no').alignment = { horizontal: 'center' };
      row.getCell('vk_id').alignment = { horizontal: 'center' };
      row.getCell('tg_id').alignment = { horizontal: 'center' };
      row.getCell('payment_date').alignment = { horizontal: 'center' };
      row.getCell('subscription_days').alignment = { horizontal: 'center' };
      row.getCell('amount').alignment = { horizontal: 'center' };
      
      // –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
      row.getCell('vk_name').alignment = { horizontal: 'left' };
      row.getCell('vk_link').alignment = { horizontal: 'left' };
      row.getCell('tg_name').alignment = { horizontal: 'left' };
      row.getCell('access_key').alignment = { horizontal: 'center' };
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º Excel —Ñ–∞–π–ª
    await workbook.xlsx.writeFile(filePath);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await ctx.replyWithDocument({ source: filePath, filename: '–°–ø–∏—Å–æ–∫_–¥–æ–Ω–æ—Ä–æ–≤.xlsx' });
    
    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    fs.unlink(filePath, (err) => {
      if (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞:', err);
      }
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Excel —Ñ–∞–π–ª–∞:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Excel —Ñ–∞–π–ª–∞: ' + error.message);
  }
}

        